   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Button.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	updateButtonCounter
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	updateButtonCounter:
  25              	.LFB1:
  26              		.file 1 "Button.c"
   1:Button.c      **** /*
   2:Button.c      ****  * Button.c
   3:Button.c      ****  *
   4:Button.c      ****  *  Created on: 26.03.2019
   5:Button.c      ****  *      Author: MO
   6:Button.c      ****  */
   7:Button.c      **** 
   8:Button.c      **** #include "Button.h"
   9:Button.c      **** #include "Led.h"
  10:Button.c      **** #include "LedRear.h"
  11:Button.c      **** #include "Sensor.h"
  12:Button.c      **** #include "hal/Debug.h"
  13:Button.c      **** #include "hal/Flags.h"
  14:Button.c      **** #include "BLDC.h"
  15:Button.c      **** 
  16:Button.c      **** 	s16 pressTime = 0;
  17:Button.c      **** 	s8 m_buttonCounter = 0;
  18:Button.c      **** 	s8 m_buttonStateLast = 0;
  19:Button.c      **** 	s8 m_buttonState = 0;
  20:Button.c      **** 	s8 m_autoState = 0;
  21:Button.c      **** 	s8 m_bikeState = 0;
  22:Button.c      **** 
  23:Button.c      **** 	s32 m_deactiveTimer = 0;
  24:Button.c      **** 	s8 m_autoDeactive = 0;
  25:Button.c      **** 
  26:Button.c      **** 	u8 m_batteryStatusFactor = 0;
  27:Button.c      **** 	s32 m_savingTimer = 0;
  28:Button.c      **** 	s8 bikePWMState = 0;
  29:Button.c      **** 	s32 m_pedalCounterLast = 0;
  30:Button.c      **** 
  31:Button.c      **** 	// forward declarations
  32:Button.c      **** 	void updateButtonCounter();
  33:Button.c      **** 	void enableBike();
  34:Button.c      **** 	void disableBike();
  35:Button.c      **** 	void batteryCheck();
  36:Button.c      **** 
  37:Button.c      **** void button_periodicJob()
  38:Button.c      **** {
  39:Button.c      **** 	static u8 lastBikeState = 2;
  40:Button.c      **** 
  41:Button.c      **** 	updateButtonCounter();
  42:Button.c      **** 
  43:Button.c      **** 	switch(m_bikeState)
  44:Button.c      **** 	{
  45:Button.c      **** 		case BIKE_DISABLED:
  46:Button.c      **** 			disableBike();
  47:Button.c      **** 			if (lastBikeState != m_bikeState)
  48:Button.c      **** 			{
  49:Button.c      **** 				rear_led_setMode(REAR_LED_MODE_OFF);
  50:Button.c      **** 				tmcm_frontLedOff();
  51:Button.c      **** 				tmcm_disablePower();
  52:Button.c      **** 			}
  53:Button.c      **** 			break;
  54:Button.c      **** 		case BIKE_ENABLED:
  55:Button.c      **** 			if (tmcm_getPowerState() != 1)
  56:Button.c      **** 			{
  57:Button.c      **** 				tmcm_enablePower();
  58:Button.c      **** 			}
  59:Button.c      **** 			if (lastBikeState != m_bikeState)
  60:Button.c      **** 			{
  61:Button.c      **** 				//front/rear Light enabled
  62:Button.c      **** 				tmcm_frontLedOn();
  63:Button.c      **** 				tmcm_enableDriver();
  64:Button.c      **** 				tmcm_updateConfig();
  65:Button.c      **** 				enableBike();
  66:Button.c      **** 			}
  67:Button.c      **** 			batteryCheck();
  68:Button.c      **** 			break;
  69:Button.c      **** 	}
  70:Button.c      **** 
  71:Button.c      **** 	lastBikeState = m_bikeState;
  72:Button.c      **** }
  73:Button.c      **** 
  74:Button.c      **** void updateButtonCounter()
  75:Button.c      **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  76:Button.c      **** 	u8 m_buttonPositionActual = tmcm_getButtonValue();
  31              		.loc 1 76 2 view .LVU1
  75:Button.c      **** 	u8 m_buttonPositionActual = tmcm_getButtonValue();
  32              		.loc 1 75 1 is_stmt 0 view .LVU2
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 76 30 view .LVU3
  39 0002 FFF7FEFF 		bl	tmcm_getButtonValue
  40              	.LVL0:
  77:Button.c      **** 	if (m_buttonPositionActual == 0)
  41              		.loc 1 77 2 is_stmt 1 view .LVU4
  42              		.loc 1 77 5 is_stmt 0 view .LVU5
  43 0006 0028     		cmp	r0, #0
  44 0008 4DD1     		bne	.L2
  78:Button.c      **** 	{
  79:Button.c      **** 		pressTime++;
  45              		.loc 1 79 3 is_stmt 1 view .LVU6
  46              		.loc 1 79 12 is_stmt 0 view .LVU7
  47 000a 3C4C     		ldr	r4, .L41
  48 000c 2388     		ldrh	r3, [r4]
  49 000e 0133     		adds	r3, r3, #1
  50 0010 1BB2     		sxth	r3, r3
  80:Button.c      **** 		if(pressTime == 100)
  51              		.loc 1 80 5 view .LVU8
  52 0012 642B     		cmp	r3, #100
  79:Button.c      **** 		if(pressTime == 100)
  53              		.loc 1 79 12 view .LVU9
  54 0014 2380     		strh	r3, [r4]	@ movhi
  55              		.loc 1 80 3 is_stmt 1 view .LVU10
  56              		.loc 1 80 5 is_stmt 0 view .LVU11
  57 0016 5AD0     		beq	.L3
  81:Button.c      **** 		{
  82:Button.c      **** 			m_buttonCounter++;
  83:Button.c      **** 		}
  84:Button.c      **** 		// enable Power
  85:Button.c      **** //		if(pressTime == 500)
  86:Button.c      **** //		{
  87:Button.c      **** //			tmcm_enablePower();
  88:Button.c      **** //		}
  89:Button.c      **** 	}
  90:Button.c      **** 	else
  91:Button.c      **** 	{
  92:Button.c      **** 		pressTime = 0;
  93:Button.c      **** 	}
  94:Button.c      **** 
  95:Button.c      **** 	if(m_buttonCounter == 100)
  58              		.loc 1 95 21 view .LVU12
  59 0018 94F90230 		ldrsb	r3, [r4, #2]
  60              	.L4:
  61              		.loc 1 95 2 is_stmt 1 view .LVU13
  62              		.loc 1 95 4 is_stmt 0 view .LVU14
  63 001c 642B     		cmp	r3, #100
  64 001e 49D0     		beq	.L37
  65              	.L5:
  96:Button.c      **** 	{
  97:Button.c      **** 		m_buttonCounter = 0;
  98:Button.c      **** 	}
  99:Button.c      **** 	m_buttonState = m_buttonCounter % 2;
  66              		.loc 1 99 2 is_stmt 1 view .LVU15
  67              		.loc 1 99 16 is_stmt 0 view .LVU16
  68 0020 002B     		cmp	r3, #0
  69 0022 03F00103 		and	r3, r3, #1
  70 0026 1A46     		mov	r2, r3
 100:Button.c      **** 
 101:Button.c      **** 	// auto Bike enable
 102:Button.c      **** 	if((m_bikeState == BIKE_DISABLED) && (m_buttonState == BIKE_ENABLED))
  71              		.loc 1 102 18 view .LVU17
  72 0028 94F90410 		ldrsb	r1, [r4, #4]
  99:Button.c      **** 
  73              		.loc 1 99 16 view .LVU18
  74 002c B8BF     		it	lt
  75 002e 5A42     		rsblt	r2, r3, #0
  76              		.loc 1 102 4 view .LVU19
  77 0030 0129     		cmp	r1, #1
  99:Button.c      **** 
  78              		.loc 1 99 16 view .LVU20
  79 0032 E270     		strb	r2, [r4, #3]
  80              		.loc 1 102 2 is_stmt 1 view .LVU21
  81              		.loc 1 102 4 is_stmt 0 view .LVU22
  82 0034 17D0     		beq	.L38
  83              	.L6:
 103:Button.c      **** 	{
 104:Button.c      **** 		if(tmcm_getInterruptValue() == 1)
 105:Button.c      **** 		{
 106:Button.c      **** 			m_autoState = BIKE_ENABLED;
 107:Button.c      **** 		}
 108:Button.c      **** 	}
 109:Button.c      **** 
 110:Button.c      **** 	// auto Bike disable
 111:Button.c      **** 	if(m_bikeState == BIKE_ENABLED)
  84              		.loc 1 111 2 is_stmt 1 view .LVU23
  85              		.loc 1 111 4 is_stmt 0 view .LVU24
  86 0036 01BB     		cbnz	r1, .L39
  87              	.LVL1:
  88              	.L11:
 112:Button.c      **** 	{
 113:Button.c      **** 		if(m_autoDeactive == 1)
  89              		.loc 1 113 3 is_stmt 1 view .LVU25
  90              		.loc 1 113 5 is_stmt 0 view .LVU26
  91 0038 94F90630 		ldrsb	r3, [r4, #6]
 114:Button.c      **** 		{
 115:Button.c      **** 			m_autoState = BIKE_DISABLED;
 116:Button.c      **** 		}
 117:Button.c      **** 	}
 118:Button.c      **** 
 119:Button.c      **** 	if((m_autoState == BIKE_DISABLED)&&(m_buttonState != m_buttonStateLast))
  92              		.loc 1 119 52 view .LVU27
  93 003c 94F90320 		ldrsb	r2, [r4, #3]
 113:Button.c      **** 		{
  94              		.loc 1 113 5 view .LVU28
  95 0040 012B     		cmp	r3, #1
  96 0042 50D0     		beq	.L13
  97              	.L10:
  98              		.loc 1 119 2 is_stmt 1 view .LVU29
  99              		.loc 1 119 4 is_stmt 0 view .LVU30
 100 0044 94F90530 		ldrsb	r3, [r4, #5]
 101 0048 012B     		cmp	r3, #1
 102 004a 1CD0     		beq	.L14
 103              	.L15:
 120:Button.c      **** 	{
 121:Button.c      **** 		m_buttonCounter = BIKE_ENABLED;
 122:Button.c      **** 		m_buttonState = BIKE_ENABLED;
 123:Button.c      **** 		m_autoState = BIKE_ENABLED;
 124:Button.c      **** 	}
 125:Button.c      **** 
 126:Button.c      **** 	if(m_buttonState == BIKE_ENABLED)				// auto Bike handling
 104              		.loc 1 126 2 is_stmt 1 view .LVU31
 105              		.loc 1 126 4 is_stmt 0 view .LVU32
 106 004c 002A     		cmp	r2, #0
 107 004e 3AD0     		beq	.L34
 127:Button.c      **** 	{
 128:Button.c      **** 		m_bikeState = m_autoState;
 129:Button.c      **** 	}
 130:Button.c      **** 	else if(m_buttonStateLast != m_buttonState)		// button handling
 108              		.loc 1 130 7 is_stmt 1 view .LVU33
 109              		.loc 1 130 9 is_stmt 0 view .LVU34
 110 0050 94F90730 		ldrsb	r3, [r4, #7]
 111 0054 9342     		cmp	r3, r2
 112 0056 3FD0     		beq	.L35
 131:Button.c      **** 	{
 132:Button.c      **** 		m_bikeState = m_buttonState;
 113              		.loc 1 132 3 is_stmt 1 view .LVU35
 114              		.loc 1 132 15 is_stmt 0 view .LVU36
 115 0058 2271     		strb	r2, [r4, #4]
 133:Button.c      **** 	}
 134:Button.c      **** 
 135:Button.c      **** 	m_buttonStateLast = m_buttonState;
 116              		.loc 1 135 2 is_stmt 1 view .LVU37
 117              		.loc 1 135 20 is_stmt 0 view .LVU38
 118 005a E271     		strb	r2, [r4, #7]
 136:Button.c      **** 
 137:Button.c      **** 	debug_setTestVar0(m_bikeState);
 119              		.loc 1 137 2 is_stmt 1 view .LVU39
 120 005c 1046     		mov	r0, r2
 138:Button.c      **** }
 121              		.loc 1 138 1 is_stmt 0 view .LVU40
 122 005e BDE81040 		pop	{r4, lr}
 123              	.LCFI1:
 124              		.cfi_remember_state
 125              		.cfi_restore 14
 126              		.cfi_restore 4
 127              		.cfi_def_cfa_offset 0
 137:Button.c      **** }
 128              		.loc 1 137 2 view .LVU41
 129 0062 FFF7FEBF 		b	debug_setTestVar0
 130              	.LVL2:
 131              	.L38:
 132              	.LCFI2:
 133              		.cfi_restore_state
 102:Button.c      **** 	{
 134              		.loc 1 102 36 discriminator 1 view .LVU42
 135 0066 002B     		cmp	r3, #0
 136 0068 ECD1     		bne	.L10
 137              	.L9:
 104:Button.c      **** 		{
 138              		.loc 1 104 3 is_stmt 1 view .LVU43
 104:Button.c      **** 		{
 139              		.loc 1 104 6 is_stmt 0 view .LVU44
 140 006a FFF7FEFF 		bl	tmcm_getInterruptValue
 141              	.LVL3:
 104:Button.c      **** 		{
 142              		.loc 1 104 5 view .LVU45
 143 006e 0128     		cmp	r0, #1
 144 0070 3BD0     		beq	.L40
 111:Button.c      **** 	{
 145              		.loc 1 111 17 view .LVU46
 146 0072 94F90410 		ldrsb	r1, [r4, #4]
 111:Button.c      **** 	{
 147              		.loc 1 111 2 is_stmt 1 view .LVU47
 111:Button.c      **** 	{
 148              		.loc 1 111 4 is_stmt 0 view .LVU48
 149 0076 0029     		cmp	r1, #0
 150 0078 DED0     		beq	.L11
 151              	.L39:
 119:Button.c      **** 	{
 152              		.loc 1 119 4 view .LVU49
 153 007a 94F90530 		ldrsb	r3, [r4, #5]
 119:Button.c      **** 	{
 154              		.loc 1 119 52 view .LVU50
 155 007e 94F90320 		ldrsb	r2, [r4, #3]
 119:Button.c      **** 	{
 156              		.loc 1 119 2 is_stmt 1 view .LVU51
 119:Button.c      **** 	{
 157              		.loc 1 119 4 is_stmt 0 view .LVU52
 158 0082 012B     		cmp	r3, #1
 159 0084 E2D1     		bne	.L15
 160              	.L14:
 119:Button.c      **** 	{
 161              		.loc 1 119 35 discriminator 1 view .LVU53
 162 0086 94F90730 		ldrsb	r3, [r4, #7]
 163 008a 9342     		cmp	r3, r2
 164 008c 1AD0     		beq	.L16
 121:Button.c      **** 		m_buttonState = BIKE_ENABLED;
 165              		.loc 1 121 3 is_stmt 1 view .LVU54
 121:Button.c      **** 		m_buttonState = BIKE_ENABLED;
 166              		.loc 1 121 19 is_stmt 0 view .LVU55
 167 008e 0023     		movs	r3, #0
 123:Button.c      **** 	}
 168              		.loc 1 123 15 view .LVU56
 169 0090 1846     		mov	r0, r3
 121:Button.c      **** 		m_buttonState = BIKE_ENABLED;
 170              		.loc 1 121 19 view .LVU57
 171 0092 A370     		strb	r3, [r4, #2]
 122:Button.c      **** 		m_autoState = BIKE_ENABLED;
 172              		.loc 1 122 3 is_stmt 1 view .LVU58
 122:Button.c      **** 		m_autoState = BIKE_ENABLED;
 173              		.loc 1 122 17 is_stmt 0 view .LVU59
 174 0094 E370     		strb	r3, [r4, #3]
 123:Button.c      **** 	}
 175              		.loc 1 123 3 is_stmt 1 view .LVU60
 123:Button.c      **** 	}
 176              		.loc 1 123 15 is_stmt 0 view .LVU61
 177 0096 6371     		strb	r3, [r4, #5]
 126:Button.c      **** 	{
 178              		.loc 1 126 2 is_stmt 1 view .LVU62
 179              	.L17:
 128:Button.c      **** 	}
 180              		.loc 1 128 3 view .LVU63
 181 0098 0022     		movs	r2, #0
 128:Button.c      **** 	}
 182              		.loc 1 128 15 is_stmt 0 view .LVU64
 183 009a 2371     		strb	r3, [r4, #4]
 135:Button.c      **** 
 184              		.loc 1 135 2 is_stmt 1 view .LVU65
 135:Button.c      **** 
 185              		.loc 1 135 20 is_stmt 0 view .LVU66
 186 009c E271     		strb	r2, [r4, #7]
 137:Button.c      **** }
 187              		.loc 1 137 2 is_stmt 1 view .LVU67
 188              		.loc 1 138 1 is_stmt 0 view .LVU68
 189 009e BDE81040 		pop	{r4, lr}
 190              	.LCFI3:
 191              		.cfi_remember_state
 192              		.cfi_restore 14
 193              		.cfi_restore 4
 194              		.cfi_def_cfa_offset 0
 137:Button.c      **** }
 195              		.loc 1 137 2 view .LVU69
 196 00a2 FFF7FEBF 		b	debug_setTestVar0
 197              	.LVL4:
 198              	.L2:
 199              	.LCFI4:
 200              		.cfi_restore_state
  92:Button.c      **** 	}
 201              		.loc 1 92 3 is_stmt 1 view .LVU70
  92:Button.c      **** 	}
 202              		.loc 1 92 13 is_stmt 0 view .LVU71
 203 00a6 0022     		movs	r2, #0
 204 00a8 144C     		ldr	r4, .L41
  95:Button.c      **** 	{
 205              		.loc 1 95 21 view .LVU72
 206 00aa 94F90230 		ldrsb	r3, [r4, #2]
  92:Button.c      **** 	}
 207              		.loc 1 92 13 view .LVU73
 208 00ae 2280     		strh	r2, [r4]	@ movhi
  95:Button.c      **** 	{
 209              		.loc 1 95 2 is_stmt 1 view .LVU74
  95:Button.c      **** 	{
 210              		.loc 1 95 4 is_stmt 0 view .LVU75
 211 00b0 642B     		cmp	r3, #100
 212 00b2 B5D1     		bne	.L5
 213              	.L37:
  97:Button.c      **** 	}
 214              		.loc 1 97 3 is_stmt 1 view .LVU76
  97:Button.c      **** 	}
 215              		.loc 1 97 19 is_stmt 0 view .LVU77
 216 00b4 0023     		movs	r3, #0
 102:Button.c      **** 	{
 217              		.loc 1 102 18 view .LVU78
 218 00b6 94F90410 		ldrsb	r1, [r4, #4]
  97:Button.c      **** 	}
 219              		.loc 1 97 19 view .LVU79
 220 00ba A370     		strb	r3, [r4, #2]
  99:Button.c      **** 
 221              		.loc 1 99 2 is_stmt 1 view .LVU80
 102:Button.c      **** 	{
 222              		.loc 1 102 4 is_stmt 0 view .LVU81
 223 00bc 0129     		cmp	r1, #1
  99:Button.c      **** 
 224              		.loc 1 99 16 view .LVU82
 225 00be E370     		strb	r3, [r4, #3]
 102:Button.c      **** 	{
 226              		.loc 1 102 2 is_stmt 1 view .LVU83
 102:Button.c      **** 	{
 227              		.loc 1 102 4 is_stmt 0 view .LVU84
 228 00c0 B9D1     		bne	.L6
 229 00c2 D2E7     		b	.L9
 230              	.LVL5:
 231              	.L16:
 126:Button.c      **** 	{
 232              		.loc 1 126 2 is_stmt 1 view .LVU85
 126:Button.c      **** 	{
 233              		.loc 1 126 4 is_stmt 0 view .LVU86
 234 00c4 42B9     		cbnz	r2, .L35
 235              	.L34:
 128:Button.c      **** 	}
 236              		.loc 1 128 15 view .LVU87
 237 00c6 94F90530 		ldrsb	r3, [r4, #5]
 137:Button.c      **** }
 238              		.loc 1 137 2 view .LVU88
 239 00ca 1846     		mov	r0, r3
 240 00cc E4E7     		b	.L17
 241              	.LVL6:
 242              	.L3:
  82:Button.c      **** 		}
 243              		.loc 1 82 4 is_stmt 1 view .LVU89
  82:Button.c      **** 		}
 244              		.loc 1 82 19 is_stmt 0 view .LVU90
 245 00ce A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 246 00d0 0133     		adds	r3, r3, #1
 247 00d2 5BB2     		sxtb	r3, r3
 248 00d4 A370     		strb	r3, [r4, #2]
 249 00d6 A1E7     		b	.L4
 250              	.LVL7:
 251              	.L35:
 137:Button.c      **** }
 252              		.loc 1 137 2 view .LVU91
 253 00d8 94F90400 		ldrsb	r0, [r4, #4]
 135:Button.c      **** 
 254              		.loc 1 135 2 is_stmt 1 view .LVU92
 135:Button.c      **** 
 255              		.loc 1 135 20 is_stmt 0 view .LVU93
 256 00dc E271     		strb	r2, [r4, #7]
 137:Button.c      **** }
 257              		.loc 1 137 2 is_stmt 1 view .LVU94
 258              		.loc 1 138 1 is_stmt 0 view .LVU95
 259 00de BDE81040 		pop	{r4, lr}
 260              	.LCFI5:
 261              		.cfi_remember_state
 262              		.cfi_restore 14
 263              		.cfi_restore 4
 264              		.cfi_def_cfa_offset 0
 137:Button.c      **** }
 265              		.loc 1 137 2 view .LVU96
 266 00e2 FFF7FEBF 		b	debug_setTestVar0
 267              	.LVL8:
 268              	.L13:
 269              	.LCFI6:
 270              		.cfi_restore_state
 115:Button.c      **** 		}
 271              		.loc 1 115 4 is_stmt 1 view .LVU97
 115:Button.c      **** 		}
 272              		.loc 1 115 16 is_stmt 0 view .LVU98
 273 00e6 6371     		strb	r3, [r4, #5]
 119:Button.c      **** 	{
 274              		.loc 1 119 2 is_stmt 1 view .LVU99
 275 00e8 CDE7     		b	.L14
 276              	.L40:
 106:Button.c      **** 		}
 277              		.loc 1 106 4 view .LVU100
 106:Button.c      **** 		}
 278              		.loc 1 106 16 is_stmt 0 view .LVU101
 279 00ea 0022     		movs	r2, #0
 111:Button.c      **** 	{
 280              		.loc 1 111 4 view .LVU102
 281 00ec 94F90430 		ldrsb	r3, [r4, #4]
 106:Button.c      **** 		}
 282              		.loc 1 106 16 view .LVU103
 283 00f0 6271     		strb	r2, [r4, #5]
 111:Button.c      **** 	{
 284              		.loc 1 111 2 is_stmt 1 view .LVU104
 111:Button.c      **** 	{
 285              		.loc 1 111 4 is_stmt 0 view .LVU105
 286 00f2 002B     		cmp	r3, #0
 287 00f4 A0D0     		beq	.L11
 126:Button.c      **** 	{
 288              		.loc 1 126 19 view .LVU106
 289 00f6 94F90320 		ldrsb	r2, [r4, #3]
 290 00fa A7E7     		b	.L15
 291              	.L42:
 292              		.align	2
 293              	.L41:
 294 00fc 00000000 		.word	.LANCHOR0
 295              		.cfi_endproc
 296              	.LFE1:
 298              		.align	1
 299              		.p2align 2,,3
 300              		.global	enableBike
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	enableBike:
 306              	.LFB2:
 139:Button.c      **** 
 140:Button.c      **** void enableBike()
 141:Button.c      **** {
 307              		.loc 1 141 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 142:Button.c      **** 	if(COMM_MODE_FOC_DIGITAL_HALL_PEDAL_ASSIST != motorConfig.commutationMode)
 312              		.loc 1 142 2 view .LVU108
 313              		.loc 1 142 59 is_stmt 0 view .LVU109
 314 0100 054B     		ldr	r3, .L48
 315              		.loc 1 142 4 view .LVU110
 316 0102 93F86A20 		ldrb	r2, [r3, #106]	@ zero_extendqisi2
 317 0106 032A     		cmp	r2, #3
 143:Button.c      **** 	{
 144:Button.c      **** 		motorConfig.commutationMode = COMM_MODE_FOC_DIGITAL_HALL_PEDAL_ASSIST;
 318              		.loc 1 144 3 is_stmt 1 view .LVU111
 319              		.loc 1 144 31 is_stmt 0 view .LVU112
 320 0108 1CBF     		itt	ne
 321 010a 0322     		movne	r2, #3
 322 010c 83F86A20 		strbne	r2, [r3, #106]
 145:Button.c      **** 	}
 146:Button.c      **** 	m_deactiveTimer = 0;
 323              		.loc 1 146 2 is_stmt 1 view .LVU113
 324              		.loc 1 146 18 is_stmt 0 view .LVU114
 325 0110 0022     		movs	r2, #0
 326 0112 024B     		ldr	r3, .L48+4
 327 0114 9A60     		str	r2, [r3, #8]
 147:Button.c      **** }
 328              		.loc 1 147 1 view .LVU115
 329 0116 7047     		bx	lr
 330              	.L49:
 331              		.align	2
 332              	.L48:
 333 0118 00000000 		.word	motorConfig
 334 011c 00000000 		.word	.LANCHOR0
 335              		.cfi_endproc
 336              	.LFE2:
 338              		.align	1
 339              		.p2align 2,,3
 340              		.global	disableBike
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	disableBike:
 346              	.LFB3:
 148:Button.c      **** 
 149:Button.c      **** void disableBike()
 150:Button.c      **** {
 347              		.loc 1 150 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Button.c      **** 	motorConfig.commutationMode = COMM_MODE_FOC_DISABLED;
 351              		.loc 1 151 2 view .LVU117
 150:Button.c      **** 	motorConfig.commutationMode = COMM_MODE_FOC_DISABLED;
 352              		.loc 1 150 1 is_stmt 0 view .LVU118
 353 0120 10B5     		push	{r4, lr}
 354              	.LCFI7:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 358              		.loc 1 151 30 view .LVU119
 359 0122 0024     		movs	r4, #0
 360 0124 064B     		ldr	r3, .L52
 152:Button.c      **** 
 153:Button.c      **** 	// hold module in stop mode to suppress regulation
 154:Button.c      **** 	bldc_switchToMotionMode(STOP_MODE);
 361              		.loc 1 154 2 view .LVU120
 362 0126 4FF48070 		mov	r0, #256
 151:Button.c      **** 
 363              		.loc 1 151 30 view .LVU121
 364 012a 83F86A40 		strb	r4, [r3, #106]
 365              		.loc 1 154 2 is_stmt 1 view .LVU122
 366 012e FFF7FEFF 		bl	bldc_switchToMotionMode
 367              	.LVL9:
 155:Button.c      **** 	tmcm_disableDriver();
 368              		.loc 1 155 2 view .LVU123
 369 0132 FFF7FEFF 		bl	tmcm_disableDriver
 370              	.LVL10:
 156:Button.c      **** 	led_setMode(LED_MODE_OFF);
 371              		.loc 1 156 2 view .LVU124
 372 0136 2046     		mov	r0, r4
 157:Button.c      **** }
 373              		.loc 1 157 1 is_stmt 0 view .LVU125
 374 0138 BDE81040 		pop	{r4, lr}
 375              	.LCFI8:
 376              		.cfi_restore 14
 377              		.cfi_restore 4
 378              		.cfi_def_cfa_offset 0
 156:Button.c      **** 	led_setMode(LED_MODE_OFF);
 379              		.loc 1 156 2 view .LVU126
 380 013c FFF7FEBF 		b	led_setMode
 381              	.LVL11:
 382              	.L53:
 383              		.align	2
 384              	.L52:
 385 0140 00000000 		.word	motorConfig
 386              		.cfi_endproc
 387              	.LFE3:
 389              		.align	1
 390              		.p2align 2,,3
 391              		.global	button_autoDeactivation
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	button_autoDeactivation:
 397              	.LFB4:
 158:Button.c      **** 
 159:Button.c      **** void button_autoDeactivation()
 160:Button.c      **** {
 398              		.loc 1 160 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Button.c      **** 	if(	motorConfig.commutationMode != COMM_MODE_FOC_DIGITAL_HALL_PEDAL_ASSIST)
 402              		.loc 1 161 2 view .LVU128
 160:Button.c      **** 	if(	motorConfig.commutationMode != COMM_MODE_FOC_DIGITAL_HALL_PEDAL_ASSIST)
 403              		.loc 1 160 1 is_stmt 0 view .LVU129
 404 0144 10B5     		push	{r4, lr}
 405              	.LCFI9:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 409              		.loc 1 161 17 view .LVU130
 410 0146 104B     		ldr	r3, .L68
 411              		.loc 1 161 4 view .LVU131
 412 0148 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 413 014c 032B     		cmp	r3, #3
 162:Button.c      **** 	{
 163:Button.c      **** 		m_deactiveTimer = 0;
 414              		.loc 1 163 19 view .LVU132
 415 014e 1BBF     		ittet	ne
 416 0150 0023     		movne	r3, #0
 417 0152 0E4C     		ldrne	r4, .L68+4
 418 0154 0D4C     		ldreq	r4, .L68+4
 419              		.loc 1 163 3 is_stmt 1 view .LVU133
 164:Button.c      **** 	}
 165:Button.c      **** 
 166:Button.c      **** 	// tracking time before Bike get deactivated
 167:Button.c      **** 	if((sensor_wheelVelocity() == 0) && (m_bikeState == BIKE_ENABLED))
 420              		.loc 1 167 2 view .LVU134
 163:Button.c      **** 	}
 421              		.loc 1 163 19 is_stmt 0 view .LVU135
 422 0156 A360     		strne	r3, [r4, #8]
 423              		.loc 1 167 6 view .LVU136
 424 0158 FFF7FEFF 		bl	sensor_wheelVelocity
 425              	.LVL12:
 426              		.loc 1 167 4 view .LVU137
 427 015c 28B9     		cbnz	r0, .L56
 428              		.loc 1 167 35 discriminator 1 view .LVU138
 429 015e 94F90430 		ldrsb	r3, [r4, #4]
 430 0162 3BB1     		cbz	r3, .L67
 431 0164 A060     		str	r0, [r4, #8]
 168:Button.c      **** 	{
 169:Button.c      **** 		m_deactiveTimer ++;
 170:Button.c      **** 	}
 171:Button.c      **** 	else
 172:Button.c      **** 	{
 173:Button.c      **** 		m_deactiveTimer = 0;
 174:Button.c      **** 	}
 175:Button.c      **** 
 176:Button.c      **** 	// trigger to deactivate the bike
 177:Button.c      **** 	if((m_deactiveTimer >= DEACTIVATE_TIME_IN_SECONDS) && (m_bikeState == BIKE_ENABLED))
 432              		.loc 1 177 2 is_stmt 1 view .LVU139
 433              	.L59:
 178:Button.c      **** 	{
 179:Button.c      **** 		m_autoDeactive = 1;
 180:Button.c      **** 	}
 181:Button.c      **** 	else
 182:Button.c      **** 	{
 183:Button.c      **** 		m_autoDeactive = 0;
 434              		.loc 1 183 3 view .LVU140
 435              		.loc 1 183 18 is_stmt 0 view .LVU141
 436 0166 0023     		movs	r3, #0
 437 0168 02E0     		b	.L58
 438              	.L56:
 439 016a 0022     		movs	r2, #0
 440 016c 1346     		mov	r3, r2
 441 016e A260     		str	r2, [r4, #8]
 177:Button.c      **** 	{
 442              		.loc 1 177 2 is_stmt 1 view .LVU142
 443              	.L58:
 444 0170 A371     		strb	r3, [r4, #6]
 184:Button.c      **** 	}
 185:Button.c      **** }
 445              		.loc 1 185 1 is_stmt 0 view .LVU143
 446 0172 10BD     		pop	{r4, pc}
 447              	.L67:
 169:Button.c      **** 	}
 448              		.loc 1 169 3 is_stmt 1 view .LVU144
 169:Button.c      **** 	}
 449              		.loc 1 169 19 is_stmt 0 view .LVU145
 450 0174 A368     		ldr	r3, [r4, #8]
 451 0176 0133     		adds	r3, r3, #1
 177:Button.c      **** 	{
 452              		.loc 1 177 4 view .LVU146
 453 0178 B32B     		cmp	r3, #179
 454 017a A360     		str	r3, [r4, #8]
 177:Button.c      **** 	{
 455              		.loc 1 177 2 is_stmt 1 view .LVU147
 179:Button.c      **** 	}
 456              		.loc 1 179 18 is_stmt 0 view .LVU148
 457 017c C8BF     		it	gt
 458 017e 0123     		movgt	r3, #1
 177:Button.c      **** 	{
 459              		.loc 1 177 4 view .LVU149
 460 0180 F1DD     		ble	.L59
 461 0182 A371     		strb	r3, [r4, #6]
 462              		.loc 1 185 1 view .LVU150
 463 0184 10BD     		pop	{r4, pc}
 464              	.L69:
 465 0186 00BF     		.align	2
 466              	.L68:
 467 0188 00000000 		.word	motorConfig
 468 018c 00000000 		.word	.LANCHOR0
 469              		.cfi_endproc
 470              	.LFE4:
 472              		.align	1
 473              		.p2align 2,,3
 474              		.global	button_updateBatteryStatusFactor
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	button_updateBatteryStatusFactor:
 480              	.LFB5:
 186:Button.c      **** 
 187:Button.c      **** void button_updateBatteryStatusFactor()
 188:Button.c      **** {
 481              		.loc 1 188 1 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 189:Button.c      **** 	m_batteryStatusFactor = (motorConfig.maxBatteryVoltage - motorConfig.cutOffVoltage)/MAX_COLOR;
 486              		.loc 1 189 2 view .LVU152
 487              		.loc 1 189 38 is_stmt 0 view .LVU153
 488 0190 0749     		ldr	r1, .L71
 489              		.loc 1 189 85 view .LVU154
 490 0192 084A     		ldr	r2, .L71+4
 491              		.loc 1 189 70 view .LVU155
 492 0194 B1F85200 		ldrh	r0, [r1, #82]
 493              		.loc 1 189 38 view .LVU156
 494 0198 B1F85030 		ldrh	r3, [r1, #80]
 495              		.loc 1 189 24 view .LVU157
 496 019c 0649     		ldr	r1, .L71+8
 497              		.loc 1 189 57 view .LVU158
 498 019e 1B1A     		subs	r3, r3, r0
 499              		.loc 1 189 85 view .LVU159
 500 01a0 82FB0302 		smull	r0, r2, r2, r3
 501 01a4 DB17     		asrs	r3, r3, #31
 502 01a6 C3EB6203 		rsb	r3, r3, r2, asr #1
 503              		.loc 1 189 24 view .LVU160
 504 01aa 0B73     		strb	r3, [r1, #12]
 190:Button.c      **** }
 505              		.loc 1 190 1 view .LVU161
 506 01ac 7047     		bx	lr
 507              	.L72:
 508 01ae 00BF     		.align	2
 509              	.L71:
 510 01b0 00000000 		.word	motorConfig
 511 01b4 398EE338 		.word	954437177
 512 01b8 00000000 		.word	.LANCHOR0
 513              		.cfi_endproc
 514              	.LFE5:
 516              		.align	1
 517              		.p2align 2,,3
 518              		.global	batteryCheck
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 523              	batteryCheck:
 524              	.LFB6:
 191:Button.c      **** 
 192:Button.c      **** void batteryCheck()
 193:Button.c      **** {
 525              		.loc 1 193 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Button.c      **** 	s32 actualRampTargetTorque = bldc_rampTargetTorque();
 529              		.loc 1 194 2 view .LVU163
 193:Button.c      **** 	s32 actualRampTargetTorque = bldc_rampTargetTorque();
 530              		.loc 1 193 1 is_stmt 0 view .LVU164
 531 01bc 38B5     		push	{r3, r4, r5, lr}
 532              	.LCFI10:
 533              		.cfi_def_cfa_offset 16
 534              		.cfi_offset 3, -16
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538              		.loc 1 194 31 view .LVU165
 539 01be FFF7FEFF 		bl	bldc_rampTargetTorque
 540              	.LVL13:
 195:Button.c      **** 	if(actualRampTargetTorque <= motorConfig.minimumMotorCurrent)
 541              		.loc 1 195 2 is_stmt 1 view .LVU166
 542              		.loc 1 195 42 is_stmt 0 view .LVU167
 543 01c2 1B4C     		ldr	r4, .L83
 544 01c4 B4F84A30 		ldrh	r3, [r4, #74]
 545              		.loc 1 195 4 view .LVU168
 546 01c8 8342     		cmp	r3, r0
 547 01ca 00DA     		bge	.L81
 548              	.LVL14:
 549              	.L73:
 196:Button.c      **** 	{
 197:Button.c      **** 		s32 actualSupplyVoltage = bldc_getSupplyVoltage();
 198:Button.c      **** 
 199:Button.c      **** 		if(actualSupplyVoltage <= motorConfig.cutOffVoltage )
 200:Button.c      **** 		{
 201:Button.c      **** 			motorConfig.commutationMode = COMM_MODE_FOC_DISABLED;
 202:Button.c      **** 			led_setMode(LED_MODE_BLINK);
 203:Button.c      **** 			led_setColor(0);
 204:Button.c      **** 			led_setBlinkTime(1000);
 205:Button.c      **** 		}
 206:Button.c      **** 		else if(actualSupplyVoltage-motorConfig.minBatteryVoltage >= 0)
 207:Button.c      **** 		{
 208:Button.c      **** 			s8 batteryStatus = actualSupplyVoltage-motorConfig.cutOffVoltage;
 209:Button.c      **** 			batteryStatus /= m_batteryStatusFactor;
 210:Button.c      **** 			if(batteryStatus <= 0)
 211:Button.c      **** 			{
 212:Button.c      **** 				batteryStatus = 0;
 213:Button.c      **** 			}
 214:Button.c      **** 			if(actualSupplyVoltage >= motorConfig.maxBatteryVoltage)
 215:Button.c      **** 			{
 216:Button.c      **** 				batteryStatus = 9;
 217:Button.c      **** 			}
 218:Button.c      **** 			led_setMode(LED_MODE_ON);
 219:Button.c      **** 			led_setColor(batteryStatus);
 220:Button.c      **** 		}
 221:Button.c      **** 	}
 222:Button.c      **** }
 550              		.loc 1 222 1 view .LVU169
 551 01cc 38BD     		pop	{r3, r4, r5, pc}
 552              	.LVL15:
 553              	.L81:
 554              	.LBB11:
 555              	.LBI11:
 192:Button.c      **** {
 556              		.loc 1 192 6 is_stmt 1 view .LVU170
 557              	.LBB12:
 558              	.LBB13:
 197:Button.c      **** 
 559              		.loc 1 197 3 view .LVU171
 197:Button.c      **** 
 560              		.loc 1 197 29 is_stmt 0 view .LVU172
 561 01ce FFF7FEFF 		bl	bldc_getSupplyVoltage
 562              	.LVL16:
 199:Button.c      **** 		{
 563              		.loc 1 199 40 view .LVU173
 564 01d2 B4F85220 		ldrh	r2, [r4, #82]
 565              	.LVL17:
 199:Button.c      **** 		{
 566              		.loc 1 199 3 is_stmt 1 view .LVU174
 199:Button.c      **** 		{
 567              		.loc 1 199 5 is_stmt 0 view .LVU175
 568 01d6 9042     		cmp	r0, r2
 569 01d8 19DD     		ble	.L82
 206:Button.c      **** 		{
 570              		.loc 1 206 8 is_stmt 1 view .LVU176
 206:Button.c      **** 		{
 571              		.loc 1 206 42 is_stmt 0 view .LVU177
 572 01da B4F84E30 		ldrh	r3, [r4, #78]
 206:Button.c      **** 		{
 573              		.loc 1 206 30 view .LVU178
 574 01de C31A     		subs	r3, r0, r3
 206:Button.c      **** 		{
 575              		.loc 1 206 10 view .LVU179
 576 01e0 002B     		cmp	r3, #0
 577 01e2 F3DB     		blt	.L73
 578              	.LBB14:
 208:Button.c      **** 			batteryStatus /= m_batteryStatusFactor;
 579              		.loc 1 208 4 is_stmt 1 view .LVU180
 580              	.LVL18:
 209:Button.c      **** 			if(batteryStatus <= 0)
 581              		.loc 1 209 4 view .LVU181
 214:Button.c      **** 			{
 582              		.loc 1 214 41 is_stmt 0 view .LVU182
 583 01e4 B4F85030 		ldrh	r3, [r4, #80]
 209:Button.c      **** 			if(batteryStatus <= 0)
 584              		.loc 1 209 18 view .LVU183
 585 01e8 1249     		ldr	r1, .L83+4
 214:Button.c      **** 			{
 586              		.loc 1 214 6 view .LVU184
 587 01ea 9842     		cmp	r0, r3
 209:Button.c      **** 			if(batteryStatus <= 0)
 588              		.loc 1 209 18 view .LVU185
 589 01ec 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 590              	.LVL19:
 210:Button.c      **** 			{
 591              		.loc 1 210 4 is_stmt 1 view .LVU186
 214:Button.c      **** 			{
 592              		.loc 1 214 4 view .LVU187
 214:Button.c      **** 			{
 593              		.loc 1 214 6 is_stmt 0 view .LVU188
 594 01ee 1DDA     		bge	.L79
 208:Button.c      **** 			batteryStatus /= m_batteryStatusFactor;
 595              		.loc 1 208 42 view .LVU189
 596 01f0 841A     		subs	r4, r0, r2
 209:Button.c      **** 			if(batteryStatus <= 0)
 597              		.loc 1 209 18 view .LVU190
 598 01f2 64B2     		sxtb	r4, r4
 599 01f4 94FBF1F4 		sdiv	r4, r4, r1
 219:Button.c      **** 		}
 600              		.loc 1 219 4 view .LVU191
 601 01f8 24EAE474 		bic	r4, r4, r4, asr #31
 602 01fc E4B2     		uxtb	r4, r4
 603              	.L78:
 604              	.LVL20:
 218:Button.c      **** 			led_setColor(batteryStatus);
 605              		.loc 1 218 4 is_stmt 1 view .LVU192
 606 01fe 0120     		movs	r0, #1
 607              	.LVL21:
 218:Button.c      **** 			led_setColor(batteryStatus);
 608              		.loc 1 218 4 is_stmt 0 view .LVU193
 609 0200 FFF7FEFF 		bl	led_setMode
 610              	.LVL22:
 219:Button.c      **** 		}
 611              		.loc 1 219 4 is_stmt 1 view .LVU194
 612 0204 2046     		mov	r0, r4
 613              	.LBE14:
 614              	.LBE13:
 615              	.LBE12:
 616              	.LBE11:
 617              		.loc 1 222 1 is_stmt 0 view .LVU195
 618 0206 BDE83840 		pop	{r3, r4, r5, lr}
 619              	.LCFI11:
 620              		.cfi_remember_state
 621              		.cfi_restore 14
 622              		.cfi_restore 5
 623              		.cfi_restore 4
 624              		.cfi_restore 3
 625              		.cfi_def_cfa_offset 0
 626              	.LBB21:
 627              	.LBB19:
 628              	.LBB17:
 629              	.LBB15:
 219:Button.c      **** 		}
 630              		.loc 1 219 4 view .LVU196
 631 020a FFF7FEBF 		b	led_setColor
 632              	.LVL23:
 633              	.L82:
 634              	.LCFI12:
 635              		.cfi_restore_state
 219:Button.c      **** 		}
 636              		.loc 1 219 4 view .LVU197
 637              	.LBE15:
 201:Button.c      **** 			led_setMode(LED_MODE_BLINK);
 638              		.loc 1 201 4 is_stmt 1 view .LVU198
 201:Button.c      **** 			led_setMode(LED_MODE_BLINK);
 639              		.loc 1 201 32 is_stmt 0 view .LVU199
 640 020e 0025     		movs	r5, #0
 202:Button.c      **** 			led_setColor(0);
 641              		.loc 1 202 4 view .LVU200
 642 0210 0220     		movs	r0, #2
 643              	.LVL24:
 201:Button.c      **** 			led_setMode(LED_MODE_BLINK);
 644              		.loc 1 201 32 view .LVU201
 645 0212 84F86A50 		strb	r5, [r4, #106]
 202:Button.c      **** 			led_setColor(0);
 646              		.loc 1 202 4 is_stmt 1 view .LVU202
 647 0216 FFF7FEFF 		bl	led_setMode
 648              	.LVL25:
 203:Button.c      **** 			led_setBlinkTime(1000);
 649              		.loc 1 203 4 view .LVU203
 650 021a 2846     		mov	r0, r5
 651 021c FFF7FEFF 		bl	led_setColor
 652              	.LVL26:
 204:Button.c      **** 		}
 653              		.loc 1 204 4 view .LVU204
 654              	.LBE17:
 655              	.LBE19:
 656              	.LBE21:
 657              		.loc 1 222 1 is_stmt 0 view .LVU205
 658 0220 BDE83840 		pop	{r3, r4, r5, lr}
 659              	.LCFI13:
 660              		.cfi_remember_state
 661              		.cfi_restore 14
 662              		.cfi_restore 5
 663              		.cfi_restore 4
 664              		.cfi_restore 3
 665              		.cfi_def_cfa_offset 0
 666              	.LBB22:
 667              	.LBB20:
 668              	.LBB18:
 204:Button.c      **** 		}
 669              		.loc 1 204 4 view .LVU206
 670 0224 4FF47A70 		mov	r0, #1000
 671 0228 FFF7FEBF 		b	led_setBlinkTime
 672              	.LVL27:
 673              	.L79:
 674              	.LCFI14:
 675              		.cfi_restore_state
 676              	.LBB16:
 204:Button.c      **** 		}
 677              		.loc 1 204 4 view .LVU207
 678 022c 0924     		movs	r4, #9
 679 022e E6E7     		b	.L78
 680              	.L84:
 681              		.align	2
 682              	.L83:
 683 0230 00000000 		.word	motorConfig
 684 0234 00000000 		.word	.LANCHOR0
 685              	.LBE16:
 686              	.LBE18:
 687              	.LBE20:
 688              	.LBE22:
 689              		.cfi_endproc
 690              	.LFE6:
 692              		.align	1
 693              		.p2align 2,,3
 694              		.global	button_periodicJob
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 699              	button_periodicJob:
 700              	.LFB0:
  38:Button.c      **** 	static u8 lastBikeState = 2;
 701              		.loc 1 38 1 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
  39:Button.c      **** 
 705              		.loc 1 39 2 view .LVU209
  41:Button.c      **** 
 706              		.loc 1 41 2 view .LVU210
  38:Button.c      **** 	static u8 lastBikeState = 2;
 707              		.loc 1 38 1 is_stmt 0 view .LVU211
 708 0238 70B5     		push	{r4, r5, r6, lr}
 709              	.LCFI15:
 710              		.cfi_def_cfa_offset 16
 711              		.cfi_offset 4, -16
 712              		.cfi_offset 5, -12
 713              		.cfi_offset 6, -8
 714              		.cfi_offset 14, -4
  43:Button.c      **** 	{
 715              		.loc 1 43 2 view .LVU212
 716 023a 2C4C     		ldr	r4, .L105
  41:Button.c      **** 
 717              		.loc 1 41 2 view .LVU213
 718 023c FFF7FEFF 		bl	updateButtonCounter
 719              	.LVL28:
  43:Button.c      **** 	{
 720              		.loc 1 43 2 is_stmt 1 view .LVU214
 721 0240 94F90430 		ldrsb	r3, [r4, #4]
 722 0244 CBB1     		cbz	r3, .L86
 723 0246 012B     		cmp	r3, #1
 724 0248 14D1     		bne	.L100
  46:Button.c      **** 			if (lastBikeState != m_bikeState)
 725              		.loc 1 46 4 view .LVU215
 726              	.LBB27:
 727              	.LBI27:
 149:Button.c      **** {
 728              		.loc 1 149 6 view .LVU216
 729              	.LBB28:
 151:Button.c      **** 
 730              		.loc 1 151 2 view .LVU217
 151:Button.c      **** 
 731              		.loc 1 151 30 is_stmt 0 view .LVU218
 732 024a 0026     		movs	r6, #0
 733 024c 284B     		ldr	r3, .L105+4
 154:Button.c      **** 	tmcm_disableDriver();
 734              		.loc 1 154 2 view .LVU219
 735 024e 4FF48070 		mov	r0, #256
 736              	.LBE28:
 737              	.LBE27:
  47:Button.c      **** 			{
 738              		.loc 1 47 22 view .LVU220
 739 0252 284D     		ldr	r5, .L105+8
 740              	.LBB30:
 741              	.LBB29:
 151:Button.c      **** 
 742              		.loc 1 151 30 view .LVU221
 743 0254 83F86A60 		strb	r6, [r3, #106]
 154:Button.c      **** 	tmcm_disableDriver();
 744              		.loc 1 154 2 is_stmt 1 view .LVU222
 745 0258 FFF7FEFF 		bl	bldc_switchToMotionMode
 746              	.LVL29:
 155:Button.c      **** 	led_setMode(LED_MODE_OFF);
 747              		.loc 1 155 2 view .LVU223
 748 025c FFF7FEFF 		bl	tmcm_disableDriver
 749              	.LVL30:
 156:Button.c      **** }
 750              		.loc 1 156 2 view .LVU224
 751 0260 3046     		mov	r0, r6
 752 0262 FFF7FEFF 		bl	led_setMode
 753              	.LVL31:
 754              	.LBE29:
 755              	.LBE30:
  47:Button.c      **** 			{
 756              		.loc 1 47 4 view .LVU225
  47:Button.c      **** 			{
 757              		.loc 1 47 22 is_stmt 0 view .LVU226
 758 0266 94F90430 		ldrsb	r3, [r4, #4]
 759 026a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
  47:Button.c      **** 			{
 760              		.loc 1 47 7 view .LVU227
 761 026c 9A42     		cmp	r2, r3
 762 026e 32D1     		bne	.L101
  71:Button.c      **** }
 763              		.loc 1 71 2 is_stmt 1 view .LVU228
  71:Button.c      **** }
 764              		.loc 1 71 16 is_stmt 0 view .LVU229
 765 0270 2B70     		strb	r3, [r5]
  72:Button.c      **** 
 766              		.loc 1 72 1 view .LVU230
 767 0272 70BD     		pop	{r4, r5, r6, pc}
 768              	.L100:
 769 0274 1F4D     		ldr	r5, .L105+8
  71:Button.c      **** }
 770              		.loc 1 71 2 is_stmt 1 view .LVU231
  71:Button.c      **** }
 771              		.loc 1 71 16 is_stmt 0 view .LVU232
 772 0276 2B70     		strb	r3, [r5]
  72:Button.c      **** 
 773              		.loc 1 72 1 view .LVU233
 774 0278 70BD     		pop	{r4, r5, r6, pc}
 775              	.L86:
  55:Button.c      **** 			{
 776              		.loc 1 55 4 is_stmt 1 view .LVU234
  55:Button.c      **** 			{
 777              		.loc 1 55 8 is_stmt 0 view .LVU235
 778 027a FFF7FEFF 		bl	tmcm_getPowerState
 779              	.LVL32:
  55:Button.c      **** 			{
 780              		.loc 1 55 7 view .LVU236
 781 027e 0128     		cmp	r0, #1
 782 0280 20D1     		bne	.L102
  59:Button.c      **** 			{
 783              		.loc 1 59 4 is_stmt 1 view .LVU237
  59:Button.c      **** 			{
 784              		.loc 1 59 22 is_stmt 0 view .LVU238
 785 0282 1C4D     		ldr	r5, .L105+8
 786 0284 94F90430 		ldrsb	r3, [r4, #4]
 787 0288 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
  59:Button.c      **** 			{
 788              		.loc 1 59 7 view .LVU239
 789 028a 9A42     		cmp	r2, r3
 790 028c 05D1     		bne	.L103
 791              	.L89:
  67:Button.c      **** 			break;
 792              		.loc 1 67 4 is_stmt 1 view .LVU240
 793 028e FFF7FEFF 		bl	batteryCheck
 794              	.LVL33:
  68:Button.c      **** 	}
 795              		.loc 1 68 4 view .LVU241
  71:Button.c      **** }
 796              		.loc 1 71 16 is_stmt 0 view .LVU242
 797 0292 94F90430 		ldrsb	r3, [r4, #4]
 798              	.L104:
  71:Button.c      **** }
 799              		.loc 1 71 2 is_stmt 1 view .LVU243
  71:Button.c      **** }
 800              		.loc 1 71 16 is_stmt 0 view .LVU244
 801 0296 2B70     		strb	r3, [r5]
  72:Button.c      **** 
 802              		.loc 1 72 1 view .LVU245
 803 0298 70BD     		pop	{r4, r5, r6, pc}
 804              	.L103:
  62:Button.c      **** 				tmcm_enableDriver();
 805              		.loc 1 62 5 is_stmt 1 view .LVU246
 806 029a FFF7FEFF 		bl	tmcm_frontLedOn
 807              	.LVL34:
  63:Button.c      **** 				tmcm_updateConfig();
 808              		.loc 1 63 5 view .LVU247
 809 029e FFF7FEFF 		bl	tmcm_enableDriver
 810              	.LVL35:
  64:Button.c      **** 				enableBike();
 811              		.loc 1 64 5 view .LVU248
 812 02a2 FFF7FEFF 		bl	tmcm_updateConfig
 813              	.LVL36:
  65:Button.c      **** 			}
 814              		.loc 1 65 5 view .LVU249
 815              	.LBB31:
 816              	.LBI31:
 140:Button.c      **** {
 817              		.loc 1 140 6 view .LVU250
 818              	.LBB32:
 142:Button.c      **** 	{
 819              		.loc 1 142 2 view .LVU251
 142:Button.c      **** 	{
 820              		.loc 1 142 59 is_stmt 0 view .LVU252
 821 02a6 124B     		ldr	r3, .L105+4
 142:Button.c      **** 	{
 822              		.loc 1 142 4 view .LVU253
 823 02a8 93F86A20 		ldrb	r2, [r3, #106]	@ zero_extendqisi2
 824 02ac 032A     		cmp	r2, #3
 144:Button.c      **** 	}
 825              		.loc 1 144 3 is_stmt 1 view .LVU254
 144:Button.c      **** 	}
 826              		.loc 1 144 31 is_stmt 0 view .LVU255
 827 02ae 1CBF     		itt	ne
 828 02b0 0322     		movne	r2, #3
 829 02b2 83F86A20 		strbne	r2, [r3, #106]
 146:Button.c      **** }
 830              		.loc 1 146 2 is_stmt 1 view .LVU256
 146:Button.c      **** }
 831              		.loc 1 146 18 is_stmt 0 view .LVU257
 832 02b6 0023     		movs	r3, #0
 833 02b8 A360     		str	r3, [r4, #8]
 834              	.LBE32:
 835              	.LBE31:
  67:Button.c      **** 			break;
 836              		.loc 1 67 4 is_stmt 1 view .LVU258
 837 02ba FFF7FEFF 		bl	batteryCheck
 838              	.LVL37:
  68:Button.c      **** 	}
 839              		.loc 1 68 4 view .LVU259
  71:Button.c      **** }
 840              		.loc 1 71 16 is_stmt 0 view .LVU260
 841 02be 94F90430 		ldrsb	r3, [r4, #4]
 842 02c2 E8E7     		b	.L104
 843              	.L102:
  57:Button.c      **** 			}
 844              		.loc 1 57 5 is_stmt 1 view .LVU261
  59:Button.c      **** 			{
 845              		.loc 1 59 22 is_stmt 0 view .LVU262
 846 02c4 0B4D     		ldr	r5, .L105+8
  57:Button.c      **** 			}
 847              		.loc 1 57 5 view .LVU263
 848 02c6 FFF7FEFF 		bl	tmcm_enablePower
 849              	.LVL38:
  59:Button.c      **** 			{
 850              		.loc 1 59 4 is_stmt 1 view .LVU264
  59:Button.c      **** 			{
 851              		.loc 1 59 22 is_stmt 0 view .LVU265
 852 02ca 94F90430 		ldrsb	r3, [r4, #4]
 853 02ce 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
  59:Button.c      **** 			{
 854              		.loc 1 59 7 view .LVU266
 855 02d0 9A42     		cmp	r2, r3
 856 02d2 DCD0     		beq	.L89
 857 02d4 E1E7     		b	.L103
 858              	.L101:
  49:Button.c      **** 				tmcm_frontLedOff();
 859              		.loc 1 49 5 is_stmt 1 view .LVU267
 860 02d6 3046     		mov	r0, r6
 861 02d8 FFF7FEFF 		bl	rear_led_setMode
 862              	.LVL39:
  50:Button.c      **** 				tmcm_disablePower();
 863              		.loc 1 50 5 view .LVU268
 864 02dc FFF7FEFF 		bl	tmcm_frontLedOff
 865              	.LVL40:
  51:Button.c      **** 			}
 866              		.loc 1 51 5 view .LVU269
 867 02e0 FFF7FEFF 		bl	tmcm_disablePower
 868              	.LVL41:
  71:Button.c      **** }
 869              		.loc 1 71 16 is_stmt 0 view .LVU270
 870 02e4 94F90430 		ldrsb	r3, [r4, #4]
  71:Button.c      **** }
 871              		.loc 1 71 2 is_stmt 1 view .LVU271
  71:Button.c      **** }
 872              		.loc 1 71 16 is_stmt 0 view .LVU272
 873 02e8 2B70     		strb	r3, [r5]
  72:Button.c      **** 
 874              		.loc 1 72 1 view .LVU273
 875 02ea 70BD     		pop	{r4, r5, r6, pc}
 876              	.L106:
 877              		.align	2
 878              	.L105:
 879 02ec 00000000 		.word	.LANCHOR0
 880 02f0 00000000 		.word	motorConfig
 881 02f4 00000000 		.word	.LANCHOR1
 882              		.cfi_endproc
 883              	.LFE0:
 885              		.align	1
 886              		.p2align 2,,3
 887              		.global	button_batterySaving
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 892              	button_batterySaving:
 893              	.LVL42:
 894              	.LFB7:
 223:Button.c      **** 
 224:Button.c      **** s32 button_batterySaving(s32 m_targetTorque)
 225:Button.c      **** {
 895              		.loc 1 225 1 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Button.c      **** 	s32 m_pedalCounter = sensor_pedalCounter();
 899              		.loc 1 226 2 view .LVU275
 225:Button.c      **** 	s32 m_pedalCounter = sensor_pedalCounter();
 900              		.loc 1 225 1 is_stmt 0 view .LVU276
 901 02f8 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 902              	.LCFI16:
 903              		.cfi_def_cfa_offset 24
 904              		.cfi_offset 3, -24
 905              		.cfi_offset 4, -20
 906              		.cfi_offset 5, -16
 907              		.cfi_offset 6, -12
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 225:Button.c      **** 	s32 m_pedalCounter = sensor_pedalCounter();
 910              		.loc 1 225 1 view .LVU277
 911 02fa 0546     		mov	r5, r0
 912              		.loc 1 226 23 view .LVU278
 913 02fc FFF7FEFF 		bl	sensor_pedalCounter
 914              	.LVL43:
 227:Button.c      **** 
 228:Button.c      **** 	// tracking time before bike get deactivated
 229:Button.c      **** 	if((m_bikeState == BIKE_ENABLED) && (m_targetTorque <= 0))
 915              		.loc 1 229 18 view .LVU279
 916 0300 234C     		ldr	r4, .L117
 226:Button.c      **** 
 917              		.loc 1 226 23 view .LVU280
 918 0302 0646     		mov	r6, r0
 919              	.LVL44:
 920              		.loc 1 229 2 is_stmt 1 view .LVU281
 921              		.loc 1 229 4 is_stmt 0 view .LVU282
 922 0304 94F90430 		ldrsb	r3, [r4, #4]
 923 0308 002B     		cmp	r3, #0
 924 030a 3BD1     		bne	.L112
 925              		.loc 1 229 35 discriminator 1 view .LVU283
 926 030c 002D     		cmp	r5, #0
 927 030e 3BDD     		ble	.L115
 928              	.L108:
 230:Button.c      **** 	{
 231:Button.c      **** 		m_savingTimer ++;
 232:Button.c      **** 	}
 233:Button.c      **** 	else
 234:Button.c      **** 	{
 235:Button.c      **** 		m_savingTimer = 0;
 236:Button.c      **** 	}
 237:Button.c      **** 
 238:Button.c      **** 	// trigger to deactivate the bike
 239:Button.c      **** 	if(m_savingTimer == (s32)motorConfig.batterySavingTimer*1000)
 929              		.loc 1 239 57 view .LVU284
 930 0310 4FF47A71 		mov	r1, #1000
 931              		.loc 1 239 38 view .LVU285
 932 0314 1F4F     		ldr	r7, .L117+4
 933 0316 2361     		str	r3, [r4, #16]
 934              		.loc 1 239 2 is_stmt 1 view .LVU286
 935              		.loc 1 239 22 is_stmt 0 view .LVU287
 936 0318 B7F85420 		ldrh	r2, [r7, #84]
 937              		.loc 1 239 57 view .LVU288
 938 031c 01FB02F2 		mul	r2, r1, r2
 939              		.loc 1 239 4 view .LVU289
 940 0320 9A42     		cmp	r2, r3
 941 0322 05D0     		beq	.L116
 240:Button.c      **** 	{
 241:Button.c      **** 		bldc_setTargetMotorCurrent(0);
 242:Button.c      **** 		tmc4671_writeInt(DEFAULT_MC, TMC4671_PWM_SV_CHOP, 0x00000000);
 243:Button.c      **** 		tmc4671_setTorqueFluxPI(DEFAULT_MC, motorConfig.pidTorque_P_param, 0);
 244:Button.c      **** 		bikePWMState = 0;
 245:Button.c      **** 		m_targetTorque = 0;
 246:Button.c      **** 	}
 247:Button.c      **** 
 248:Button.c      **** 	if(bikePWMState == 0)
 942              		.loc 1 248 2 is_stmt 1 view .LVU290
 943              		.loc 1 248 4 is_stmt 0 view .LVU291
 944 0324 94F91430 		ldrsb	r3, [r4, #20]
 945 0328 9BB1     		cbz	r3, .L110
 946              	.LVL45:
 947              	.L111:
 249:Button.c      **** 	{
 250:Button.c      **** 		if ((m_pedalCounter > m_pedalCounterLast))
 251:Button.c      **** 		{
 252:Button.c      **** 			bldc_setTargetMotorCurrent(0);
 253:Button.c      **** 			tmc4671_writeInt(DEFAULT_MC, TMC4671_PWM_SV_CHOP, 0x00000007);
 254:Button.c      **** 			tmc4671_setTorqueFluxPI(DEFAULT_MC, motorConfig.pidTorque_P_param, motorConfig.pidTorque_I_param
 255:Button.c      **** 			bikePWMState = 1;
 256:Button.c      **** 			m_savingTimer = 0;
 257:Button.c      **** 		}
 258:Button.c      **** 	}
 259:Button.c      **** 
 260:Button.c      **** 	m_pedalCounterLast = m_pedalCounter;
 948              		.loc 1 260 2 is_stmt 1 view .LVU292
 261:Button.c      **** 
 262:Button.c      **** 	return m_targetTorque;
 263:Button.c      **** }
 949              		.loc 1 263 1 is_stmt 0 view .LVU293
 950 032a 2846     		mov	r0, r5
 260:Button.c      **** 
 951              		.loc 1 260 21 view .LVU294
 952 032c A661     		str	r6, [r4, #24]
 262:Button.c      **** }
 953              		.loc 1 262 2 is_stmt 1 view .LVU295
 954              		.loc 1 263 1 is_stmt 0 view .LVU296
 955 032e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 956              	.LVL46:
 957              	.L116:
 241:Button.c      **** 		tmc4671_writeInt(DEFAULT_MC, TMC4671_PWM_SV_CHOP, 0x00000000);
 958              		.loc 1 241 3 is_stmt 1 view .LVU297
 959 0330 0020     		movs	r0, #0
 960              	.LVL47:
 241:Button.c      **** 		tmc4671_writeInt(DEFAULT_MC, TMC4671_PWM_SV_CHOP, 0x00000000);
 961              		.loc 1 241 3 is_stmt 0 view .LVU298
 962 0332 FFF7FEFF 		bl	bldc_setTargetMotorCurrent
 963              	.LVL48:
 242:Button.c      **** 		tmc4671_setTorqueFluxPI(DEFAULT_MC, motorConfig.pidTorque_P_param, 0);
 964              		.loc 1 242 3 is_stmt 1 view .LVU299
 965 0336 0022     		movs	r2, #0
 966 0338 1A21     		movs	r1, #26
 967 033a 1046     		mov	r0, r2
 968 033c FFF7FEFF 		bl	tmc4671_writeInt
 969              	.LVL49:
 243:Button.c      **** 		bikePWMState = 0;
 970              		.loc 1 243 3 view .LVU300
 971 0340 0022     		movs	r2, #0
 972 0342 B7F88810 		ldrh	r1, [r7, #136]
 973 0346 1046     		mov	r0, r2
 974 0348 FFF7FEFF 		bl	tmc4671_setTorqueFluxPI
 975              	.LVL50:
 244:Button.c      **** 		m_targetTorque = 0;
 976              		.loc 1 244 3 view .LVU301
 244:Button.c      **** 		m_targetTorque = 0;
 977              		.loc 1 244 16 is_stmt 0 view .LVU302
 978 034c 0023     		movs	r3, #0
 245:Button.c      **** 	}
 979              		.loc 1 245 18 view .LVU303
 980 034e 1D46     		mov	r5, r3
 981              	.LVL51:
 244:Button.c      **** 		m_targetTorque = 0;
 982              		.loc 1 244 16 view .LVU304
 983 0350 2375     		strb	r3, [r4, #20]
 245:Button.c      **** 	}
 984              		.loc 1 245 3 is_stmt 1 view .LVU305
 985              	.LVL52:
 248:Button.c      **** 	{
 986              		.loc 1 248 2 view .LVU306
 987              	.L110:
 250:Button.c      **** 		{
 988              		.loc 1 250 3 view .LVU307
 250:Button.c      **** 		{
 989              		.loc 1 250 6 is_stmt 0 view .LVU308
 990 0352 A369     		ldr	r3, [r4, #24]
 991 0354 B342     		cmp	r3, r6
 992 0356 E8DA     		bge	.L111
 252:Button.c      **** 			tmc4671_writeInt(DEFAULT_MC, TMC4671_PWM_SV_CHOP, 0x00000007);
 993              		.loc 1 252 4 is_stmt 1 view .LVU309
 994 0358 0020     		movs	r0, #0
 995 035a FFF7FEFF 		bl	bldc_setTargetMotorCurrent
 996              	.LVL53:
 253:Button.c      **** 			tmc4671_setTorqueFluxPI(DEFAULT_MC, motorConfig.pidTorque_P_param, motorConfig.pidTorque_I_param
 997              		.loc 1 253 4 view .LVU310
 998 035e 0722     		movs	r2, #7
 999 0360 1A21     		movs	r1, #26
 1000 0362 0020     		movs	r0, #0
 1001 0364 FFF7FEFF 		bl	tmc4671_writeInt
 1002              	.LVL54:
 254:Button.c      **** 			bikePWMState = 1;
 1003              		.loc 1 254 4 view .LVU311
 1004 0368 B7F88A20 		ldrh	r2, [r7, #138]
 1005 036c 0020     		movs	r0, #0
 1006 036e B7F88810 		ldrh	r1, [r7, #136]
 1007 0372 FFF7FEFF 		bl	tmc4671_setTorqueFluxPI
 1008              	.LVL55:
 255:Button.c      **** 			m_savingTimer = 0;
 1009              		.loc 1 255 4 view .LVU312
 255:Button.c      **** 			m_savingTimer = 0;
 1010              		.loc 1 255 17 is_stmt 0 view .LVU313
 1011 0376 0122     		movs	r2, #1
 256:Button.c      **** 		}
 1012              		.loc 1 256 18 view .LVU314
 1013 0378 0023     		movs	r3, #0
 1014              		.loc 1 263 1 view .LVU315
 1015 037a 2846     		mov	r0, r5
 255:Button.c      **** 			m_savingTimer = 0;
 1016              		.loc 1 255 17 view .LVU316
 1017 037c 2275     		strb	r2, [r4, #20]
 256:Button.c      **** 		}
 1018              		.loc 1 256 4 is_stmt 1 view .LVU317
 256:Button.c      **** 		}
 1019              		.loc 1 256 18 is_stmt 0 view .LVU318
 1020 037e 2361     		str	r3, [r4, #16]
 260:Button.c      **** 
 1021              		.loc 1 260 2 is_stmt 1 view .LVU319
 260:Button.c      **** 
 1022              		.loc 1 260 21 is_stmt 0 view .LVU320
 1023 0380 A661     		str	r6, [r4, #24]
 262:Button.c      **** }
 1024              		.loc 1 262 2 is_stmt 1 view .LVU321
 1025              		.loc 1 263 1 is_stmt 0 view .LVU322
 1026 0382 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1027              	.LVL56:
 1028              	.L112:
 235:Button.c      **** 	}
 1029              		.loc 1 235 17 view .LVU323
 1030 0384 0023     		movs	r3, #0
 1031 0386 C3E7     		b	.L108
 1032              	.L115:
 231:Button.c      **** 	}
 1033              		.loc 1 231 3 is_stmt 1 view .LVU324
 231:Button.c      **** 	}
 1034              		.loc 1 231 17 is_stmt 0 view .LVU325
 1035 0388 2369     		ldr	r3, [r4, #16]
 1036 038a 0133     		adds	r3, r3, #1
 1037 038c C0E7     		b	.L108
 1038              	.L118:
 1039 038e 00BF     		.align	2
 1040              	.L117:
 1041 0390 00000000 		.word	.LANCHOR0
 1042 0394 00000000 		.word	motorConfig
 1043              		.cfi_endproc
 1044              	.LFE7:
 1046              		.align	1
 1047              		.p2align 2,,3
 1048              		.global	button_resetSavingTimer
 1049              		.syntax unified
 1050              		.thumb
 1051              		.thumb_func
 1053              	button_resetSavingTimer:
 1054              	.LFB8:
 264:Button.c      **** 
 265:Button.c      **** void button_resetSavingTimer()
 266:Button.c      **** {
 1055              		.loc 1 266 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
 267:Button.c      **** 	m_savingTimer = 0;
 1060              		.loc 1 267 2 view .LVU327
 1061              		.loc 1 267 16 is_stmt 0 view .LVU328
 1062 0398 0022     		movs	r2, #0
 1063 039a 014B     		ldr	r3, .L120
 1064 039c 1A61     		str	r2, [r3, #16]
 268:Button.c      **** }
 1065              		.loc 1 268 1 view .LVU329
 1066 039e 7047     		bx	lr
 1067              	.L121:
 1068              		.align	2
 1069              	.L120:
 1070 03a0 00000000 		.word	.LANCHOR0
 1071              		.cfi_endproc
 1072              	.LFE8:
 1074              		.global	m_pedalCounterLast
 1075              		.global	bikePWMState
 1076              		.global	m_savingTimer
 1077              		.global	m_batteryStatusFactor
 1078              		.global	m_autoDeactive
 1079              		.global	m_deactiveTimer
 1080              		.global	m_bikeState
 1081              		.global	m_autoState
 1082              		.global	m_buttonState
 1083              		.global	m_buttonStateLast
 1084              		.global	m_buttonCounter
 1085              		.global	pressTime
 1086              		.data
 1087              		.set	.LANCHOR1,. + 0
 1090              	lastBikeState.0:
 1091 0000 02       		.byte	2
 1092              		.bss
 1093              		.align	2
 1094              		.set	.LANCHOR0,. + 0
 1097              	pressTime:
 1098 0000 0000     		.space	2
 1101              	m_buttonCounter:
 1102 0002 00       		.space	1
 1105              	m_buttonState:
 1106 0003 00       		.space	1
 1109              	m_bikeState:
 1110 0004 00       		.space	1
 1113              	m_autoState:
 1114 0005 00       		.space	1
 1117              	m_autoDeactive:
 1118 0006 00       		.space	1
 1121              	m_buttonStateLast:
 1122 0007 00       		.space	1
 1125              	m_deactiveTimer:
 1126 0008 00000000 		.space	4
 1129              	m_batteryStatusFactor:
 1130 000c 00       		.space	1
 1131 000d 000000   		.space	3
 1134              	m_savingTimer:
 1135 0010 00000000 		.space	4
 1138              	bikePWMState:
 1139 0014 00       		.space	1
 1140 0015 000000   		.space	3
 1143              	m_pedalCounterLast:
 1144 0018 00000000 		.space	4
 1145              		.text
 1146              	.Letext0:
 1147              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1148              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1149              		.file 4 "TMC-API/tmc/helpers/Types.h"
 1150              		.file 5 "Definitions.h"
 1151              		.file 6 "Sensor.h"
 1152              		.file 7 "BLDC.h"
 1153              		.file 8 "./TMC-API/tmc/ic/TMC4671/TMC4671.h"
 1154              		.file 9 "hal/Debug.h"
 1155              		.file 10 "Led.h"
 1156              		.file 11 "LedRear.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Button.c
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:17     .text:00000000 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:24     .text:00000000 updateButtonCounter
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:294    .text:000000fc $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:298    .text:00000100 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:305    .text:00000100 enableBike
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:333    .text:00000118 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:338    .text:00000120 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:345    .text:00000120 disableBike
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:385    .text:00000140 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:389    .text:00000144 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:396    .text:00000144 button_autoDeactivation
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:467    .text:00000188 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:472    .text:00000190 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:479    .text:00000190 button_updateBatteryStatusFactor
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:510    .text:000001b0 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:516    .text:000001bc $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:523    .text:000001bc batteryCheck
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:683    .text:00000230 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:692    .text:00000238 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:699    .text:00000238 button_periodicJob
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:879    .text:000002ec $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:885    .text:000002f8 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:892    .text:000002f8 button_batterySaving
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1041   .text:00000390 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1046   .text:00000398 $t
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1053   .text:00000398 button_resetSavingTimer
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1070   .text:000003a0 $d
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1143   .bss:00000018 m_pedalCounterLast
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1138   .bss:00000014 bikePWMState
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1134   .bss:00000010 m_savingTimer
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1129   .bss:0000000c m_batteryStatusFactor
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1117   .bss:00000006 m_autoDeactive
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1125   .bss:00000008 m_deactiveTimer
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1109   .bss:00000004 m_bikeState
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1113   .bss:00000005 m_autoState
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1105   .bss:00000003 m_buttonState
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1121   .bss:00000007 m_buttonStateLast
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1101   .bss:00000002 m_buttonCounter
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1097   .bss:00000000 pressTime
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1090   .data:00000000 lastBikeState.0
C:\Users\forre\AppData\Local\Temp\ccij8rVQ.s:1093   .bss:00000000 $d

UNDEFINED SYMBOLS
tmcm_getButtonValue
debug_setTestVar0
tmcm_getInterruptValue
motorConfig
bldc_switchToMotionMode
tmcm_disableDriver
led_setMode
sensor_wheelVelocity
bldc_rampTargetTorque
bldc_getSupplyVoltage
led_setColor
led_setBlinkTime
tmcm_getPowerState
tmcm_frontLedOn
tmcm_enableDriver
tmcm_updateConfig
tmcm_enablePower
rear_led_setMode
tmcm_frontLedOff
tmcm_disablePower
sensor_pedalCounter
bldc_setTargetMotorCurrent
tmc4671_writeInt
tmc4671_setTorqueFluxPI
