   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f10x_bkp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	BKP_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	BKP_DeInit:
  25              	.LFB0:
  26              		.file 1 "cpu/STM32F103/stm32f10x_bkp.c"
   1:cpu/STM32F103/stm32f10x_bkp.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:cpu/STM32F103/stm32f10x_bkp.c **** * File Name          : stm32f10x_bkp.c
   3:cpu/STM32F103/stm32f10x_bkp.c **** * Author             : MCD Application Team
   4:cpu/STM32F103/stm32f10x_bkp.c **** * Version            : V2.0
   5:cpu/STM32F103/stm32f10x_bkp.c **** * Date               : 05/23/2008
   6:cpu/STM32F103/stm32f10x_bkp.c **** * Description        : This file provides all the BKP firmware functions.
   7:cpu/STM32F103/stm32f10x_bkp.c **** ********************************************************************************
   8:cpu/STM32F103/stm32f10x_bkp.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:cpu/STM32F103/stm32f10x_bkp.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:cpu/STM32F103/stm32f10x_bkp.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:cpu/STM32F103/stm32f10x_bkp.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:cpu/STM32F103/stm32f10x_bkp.c **** * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:cpu/STM32F103/stm32f10x_bkp.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:cpu/STM32F103/stm32f10x_bkp.c **** * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED 
  15:cpu/STM32F103/stm32f10x_bkp.c **** * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
  16:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
  17:cpu/STM32F103/stm32f10x_bkp.c **** 
  18:cpu/STM32F103/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  19:cpu/STM32F103/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  20:cpu/STM32F103/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  21:cpu/STM32F103/stm32f10x_bkp.c **** 
  22:cpu/STM32F103/stm32f10x_bkp.c **** /* Private typedef -----------------------------------------------------------*/
  23:cpu/STM32F103/stm32f10x_bkp.c **** /* Private define ------------------------------------------------------------*/
  24:cpu/STM32F103/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region ----------- */
  25:cpu/STM32F103/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  26:cpu/STM32F103/stm32f10x_bkp.c **** 
  27:cpu/STM32F103/stm32f10x_bkp.c **** /* --- CR Register ---*/
  28:cpu/STM32F103/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  29:cpu/STM32F103/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  30:cpu/STM32F103/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  31:cpu/STM32F103/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  32:cpu/STM32F103/stm32f10x_bkp.c **** 
  33:cpu/STM32F103/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  34:cpu/STM32F103/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  35:cpu/STM32F103/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  36:cpu/STM32F103/stm32f10x_bkp.c **** 
  37:cpu/STM32F103/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  38:cpu/STM32F103/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  39:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  40:cpu/STM32F103/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  41:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  42:cpu/STM32F103/stm32f10x_bkp.c **** 
  43:cpu/STM32F103/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  44:cpu/STM32F103/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  45:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  46:cpu/STM32F103/stm32f10x_bkp.c **** 
  47:cpu/STM32F103/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  48:cpu/STM32F103/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  49:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  50:cpu/STM32F103/stm32f10x_bkp.c **** 
  51:cpu/STM32F103/stm32f10x_bkp.c **** 
  52:cpu/STM32F103/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  53:cpu/STM32F103/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  54:cpu/STM32F103/stm32f10x_bkp.c **** #define RTCCR_CAL_Mask    ((u16)0xFF80)
  55:cpu/STM32F103/stm32f10x_bkp.c **** #define RTCCR_Mask        ((u16)0xFC7F)
  56:cpu/STM32F103/stm32f10x_bkp.c **** 
  57:cpu/STM32F103/stm32f10x_bkp.c **** /* CSR register bit mask */
  58:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_CTE_Set       ((u16)0x0001)
  59:cpu/STM32F103/stm32f10x_bkp.c **** #define CSR_CTI_Set       ((u16)0x0002)
  60:cpu/STM32F103/stm32f10x_bkp.c **** 
  61:cpu/STM32F103/stm32f10x_bkp.c **** /* Private macro -------------------------------------------------------------*/
  62:cpu/STM32F103/stm32f10x_bkp.c **** /* Private variables ---------------------------------------------------------*/
  63:cpu/STM32F103/stm32f10x_bkp.c **** /* Private function prototypes -----------------------------------------------*/
  64:cpu/STM32F103/stm32f10x_bkp.c **** /* Private functions ---------------------------------------------------------*/
  65:cpu/STM32F103/stm32f10x_bkp.c **** 
  66:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
  67:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_DeInit
  68:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Deinitializes the BKP peripheral registers to their default
  69:cpu/STM32F103/stm32f10x_bkp.c **** *                  reset values.
  70:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : None
  71:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
  72:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
  73:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
  74:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_DeInit(void)
  75:cpu/STM32F103/stm32f10x_bkp.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  76:cpu/STM32F103/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  31              		.loc 1 76 3 view .LVU1
  75:cpu/STM32F103/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  32              		.loc 1 75 1 is_stmt 0 view .LVU2
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 76 3 view .LVU3
  39 0002 0120     		movs	r0, #1
  40 0004 FFF7FEFF 		bl	RCC_BackupResetCmd
  41              	.LVL0:
  77:cpu/STM32F103/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  42              		.loc 1 77 3 is_stmt 1 view .LVU4
  78:cpu/STM32F103/stm32f10x_bkp.c **** }
  43              		.loc 1 78 1 is_stmt 0 view .LVU5
  44 0008 BDE80840 		pop	{r3, lr}
  45              	.LCFI1:
  46              		.cfi_restore 14
  47              		.cfi_restore 3
  48              		.cfi_def_cfa_offset 0
  77:cpu/STM32F103/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  49              		.loc 1 77 3 view .LVU6
  50 000c 0020     		movs	r0, #0
  51 000e FFF7FEBF 		b	RCC_BackupResetCmd
  52              	.LVL1:
  53              		.cfi_endproc
  54              	.LFE0:
  56              		.align	1
  57 0012 00BF     		.p2align 2,,3
  58              		.global	BKP_TamperPinLevelConfig
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	BKP_TamperPinLevelConfig:
  64              	.LVL2:
  65              	.LFB1:
  79:cpu/STM32F103/stm32f10x_bkp.c **** 
  80:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
  81:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_TamperPinLevelConfig
  82:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Configures the Tamper Pin active level.
  83:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - BKP_TamperPinLevel: specifies the Tamper Pin active level.
  84:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be one of the following values:
  85:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_TamperPinLevel_High: Tamper pin active on high level
  86:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_TamperPinLevel_Low: Tamper pin active on low level
  87:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
  88:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
  89:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
  90:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(u16 BKP_TamperPinLevel)
  91:cpu/STM32F103/stm32f10x_bkp.c **** {
  66              		.loc 1 91 1 is_stmt 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  92:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
  93:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
  71              		.loc 1 93 3 view .LVU8
  94:cpu/STM32F103/stm32f10x_bkp.c **** 
  95:cpu/STM32F103/stm32f10x_bkp.c ****   *(vu32 *) CR_TPAL_BB = BKP_TamperPinLevel;
  72              		.loc 1 95 3 view .LVU9
  73              		.loc 1 95 24 is_stmt 0 view .LVU10
  74 0014 014B     		ldr	r3, .L5
  75 0016 C3F80406 		str	r0, [r3, #1540]
  96:cpu/STM32F103/stm32f10x_bkp.c **** }
  76              		.loc 1 96 1 view .LVU11
  77 001a 7047     		bx	lr
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 001c 00800D42 		.word	1108180992
  82              		.cfi_endproc
  83              	.LFE1:
  85              		.align	1
  86              		.p2align 2,,3
  87              		.global	BKP_TamperPinCmd
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	BKP_TamperPinCmd:
  93              	.LVL3:
  94              	.LFB2:
  97:cpu/STM32F103/stm32f10x_bkp.c **** 
  98:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
  99:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_TamperPinCmd
 100:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Enables or disables the Tamper Pin activation.
 101:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - NewState: new state of the Tamper Pin activation.
 102:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be: ENABLE or DISABLE.
 103:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 104:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 105:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 106:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 107:cpu/STM32F103/stm32f10x_bkp.c **** {
  95              		.loc 1 107 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 108:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 109:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 100              		.loc 1 109 3 view .LVU13
 110:cpu/STM32F103/stm32f10x_bkp.c **** 
 111:cpu/STM32F103/stm32f10x_bkp.c ****   *(vu32 *) CR_TPE_BB = (u32)NewState;
 101              		.loc 1 111 3 view .LVU14
 102              		.loc 1 111 23 is_stmt 0 view .LVU15
 103 0020 014B     		ldr	r3, .L8
 104 0022 C3F80006 		str	r0, [r3, #1536]
 112:cpu/STM32F103/stm32f10x_bkp.c **** }
 105              		.loc 1 112 1 view .LVU16
 106 0026 7047     		bx	lr
 107              	.L9:
 108              		.align	2
 109              	.L8:
 110 0028 00800D42 		.word	1108180992
 111              		.cfi_endproc
 112              	.LFE2:
 114              		.align	1
 115              		.p2align 2,,3
 116              		.global	BKP_ITConfig
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	BKP_ITConfig:
 122              	.LVL4:
 123              	.LFB3:
 113:cpu/STM32F103/stm32f10x_bkp.c **** 
 114:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 115:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_ITConfig
 116:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Enables or disables the Tamper Pin Interrupt.
 117:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - NewState: new state of the Tamper Pin Interrupt.
 118:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be: ENABLE or DISABLE.
 119:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 120:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 121:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 122:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 123:cpu/STM32F103/stm32f10x_bkp.c **** {
 124              		.loc 1 123 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 124:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 125:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 129              		.loc 1 125 3 view .LVU18
 126:cpu/STM32F103/stm32f10x_bkp.c **** 
 127:cpu/STM32F103/stm32f10x_bkp.c ****   *(vu32 *) CSR_TPIE_BB = (u32)NewState;
 130              		.loc 1 127 3 view .LVU19
 131              		.loc 1 127 25 is_stmt 0 view .LVU20
 132 002c 014B     		ldr	r3, .L11
 133 002e C3F88806 		str	r0, [r3, #1672]
 128:cpu/STM32F103/stm32f10x_bkp.c **** }
 134              		.loc 1 128 1 view .LVU21
 135 0032 7047     		bx	lr
 136              	.L12:
 137              		.align	2
 138              	.L11:
 139 0034 00800D42 		.word	1108180992
 140              		.cfi_endproc
 141              	.LFE3:
 143              		.align	1
 144              		.p2align 2,,3
 145              		.global	BKP_RTCOutputConfig
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	BKP_RTCOutputConfig:
 151              	.LVL5:
 152              	.LFB4:
 129:cpu/STM32F103/stm32f10x_bkp.c **** 
 130:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 131:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_RTCOutputConfig
 132:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Select the RTC output source to output on the Tamper pin.
 133:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - BKP_RTCOutputSource: specifies the RTC output source.
 134:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be one of the following values:
 135:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 136:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_RTCOutputSource_CalibClock: output the RTC clock
 137:cpu/STM32F103/stm32f10x_bkp.c **** *                         with frequency divided by 64 on the Tamper pin.
 138:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse 
 139:cpu/STM32F103/stm32f10x_bkp.c **** *                         signal on the Tamper pin.
 140:cpu/STM32F103/stm32f10x_bkp.c **** *                       - BKP_RTCOutputSource_Second: output the RTC Second pulse 
 141:cpu/STM32F103/stm32f10x_bkp.c **** *                         signal on the Tamper pin.  
 142:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 143:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 144:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 145:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(u16 BKP_RTCOutputSource)
 146:cpu/STM32F103/stm32f10x_bkp.c **** {
 153              		.loc 1 146 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 147:cpu/STM32F103/stm32f10x_bkp.c ****   u16 tmpreg = 0;
 158              		.loc 1 147 3 view .LVU23
 148:cpu/STM32F103/stm32f10x_bkp.c **** 
 149:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 150:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 159              		.loc 1 150 3 view .LVU24
 151:cpu/STM32F103/stm32f10x_bkp.c **** 
 152:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 160              		.loc 1 152 3 view .LVU25
 161              		.loc 1 152 10 is_stmt 0 view .LVU26
 162 0038 044A     		ldr	r2, .L14
 163 003a 938D     		ldrh	r3, [r2, #44]
 164              	.LVL6:
 153:cpu/STM32F103/stm32f10x_bkp.c **** 
 154:cpu/STM32F103/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 155:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg &= RTCCR_Mask;
 165              		.loc 1 155 3 is_stmt 1 view .LVU27
 166              		.loc 1 155 10 is_stmt 0 view .LVU28
 167 003c 23F46073 		bic	r3, r3, #896
 168              	.LVL7:
 169              		.loc 1 155 10 view .LVU29
 170 0040 1B04     		lsls	r3, r3, #16
 171 0042 1B0C     		lsrs	r3, r3, #16
 172              	.LVL8:
 156:cpu/STM32F103/stm32f10x_bkp.c ****   
 157:cpu/STM32F103/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
 158:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 173              		.loc 1 158 3 is_stmt 1 view .LVU30
 174              		.loc 1 158 10 is_stmt 0 view .LVU31
 175 0044 0343     		orrs	r3, r3, r0
 176              	.LVL9:
 159:cpu/STM32F103/stm32f10x_bkp.c **** 
 160:cpu/STM32F103/stm32f10x_bkp.c ****   /* Store the new value */
 161:cpu/STM32F103/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 177              		.loc 1 161 3 is_stmt 1 view .LVU32
 178              		.loc 1 161 14 is_stmt 0 view .LVU33
 179 0046 9385     		strh	r3, [r2, #44]	@ movhi
 162:cpu/STM32F103/stm32f10x_bkp.c **** }
 180              		.loc 1 162 1 view .LVU34
 181 0048 7047     		bx	lr
 182              	.L15:
 183 004a 00BF     		.align	2
 184              	.L14:
 185 004c 006C0040 		.word	1073769472
 186              		.cfi_endproc
 187              	.LFE4:
 189              		.align	1
 190              		.p2align 2,,3
 191              		.global	BKP_SetRTCCalibrationValue
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	BKP_SetRTCCalibrationValue:
 197              	.LVL10:
 198              	.LFB5:
 163:cpu/STM32F103/stm32f10x_bkp.c **** 
 164:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 165:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_SetRTCCalibrationValue
 166:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Sets RTC Clock Calibration value.
 167:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - CalibrationValue: specifies the RTC Clock Calibration value.
 168:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter must be a number between 0 and 0x7F.
 169:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 170:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 171:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 172:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(u8 CalibrationValue)
 173:cpu/STM32F103/stm32f10x_bkp.c **** {
 199              		.loc 1 173 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 174:cpu/STM32F103/stm32f10x_bkp.c ****   u16 tmpreg = 0;
 204              		.loc 1 174 3 view .LVU36
 175:cpu/STM32F103/stm32f10x_bkp.c **** 
 176:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 177:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 205              		.loc 1 177 3 view .LVU37
 178:cpu/STM32F103/stm32f10x_bkp.c **** 
 179:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 206              		.loc 1 179 3 view .LVU38
 207              		.loc 1 179 10 is_stmt 0 view .LVU39
 208 0050 044A     		ldr	r2, .L17
 209 0052 938D     		ldrh	r3, [r2, #44]
 210              	.LVL11:
 180:cpu/STM32F103/stm32f10x_bkp.c **** 
 181:cpu/STM32F103/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 182:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_Mask;
 211              		.loc 1 182 3 is_stmt 1 view .LVU40
 212              		.loc 1 182 10 is_stmt 0 view .LVU41
 213 0054 23F07F03 		bic	r3, r3, #127
 214              	.LVL12:
 215              		.loc 1 182 10 view .LVU42
 216 0058 1B04     		lsls	r3, r3, #16
 217 005a 1B0C     		lsrs	r3, r3, #16
 218              	.LVL13:
 183:cpu/STM32F103/stm32f10x_bkp.c **** 
 184:cpu/STM32F103/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 185:cpu/STM32F103/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 219              		.loc 1 185 3 is_stmt 1 view .LVU43
 220              		.loc 1 185 10 is_stmt 0 view .LVU44
 221 005c 0343     		orrs	r3, r3, r0
 222              	.LVL14:
 186:cpu/STM32F103/stm32f10x_bkp.c **** 
 187:cpu/STM32F103/stm32f10x_bkp.c ****   /* Store the new value */
 188:cpu/STM32F103/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 223              		.loc 1 188 3 is_stmt 1 view .LVU45
 224              		.loc 1 188 14 is_stmt 0 view .LVU46
 225 005e 9385     		strh	r3, [r2, #44]	@ movhi
 189:cpu/STM32F103/stm32f10x_bkp.c **** }
 226              		.loc 1 189 1 view .LVU47
 227 0060 7047     		bx	lr
 228              	.L18:
 229 0062 00BF     		.align	2
 230              	.L17:
 231 0064 006C0040 		.word	1073769472
 232              		.cfi_endproc
 233              	.LFE5:
 235              		.align	1
 236              		.p2align 2,,3
 237              		.global	BKP_WriteBackupRegister
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	BKP_WriteBackupRegister:
 243              	.LVL15:
 244              	.LFB6:
 190:cpu/STM32F103/stm32f10x_bkp.c **** 
 191:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 192:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_WriteBackupRegister
 193:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Writes user data to the specified Data Backup Register.
 194:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - BKP_DR: specifies the Data Backup Register.
 195:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be BKP_DRx where x:[1, 42]
 196:cpu/STM32F103/stm32f10x_bkp.c **** *                  - Data: data to write
 197:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 198:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 199:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 200:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(u16 BKP_DR, u16 Data)
 201:cpu/STM32F103/stm32f10x_bkp.c **** {
 245              		.loc 1 201 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 202:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 203:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 250              		.loc 1 203 3 view .LVU49
 204:cpu/STM32F103/stm32f10x_bkp.c **** 
 205:cpu/STM32F103/stm32f10x_bkp.c ****   *(vu16 *) (BKP_BASE + BKP_DR) = Data;
 251              		.loc 1 205 3 view .LVU50
 252              		.loc 1 205 23 is_stmt 0 view .LVU51
 253 0068 00F18040 		add	r0, r0, #1073741824
 254              	.LVL16:
 255              		.loc 1 205 23 view .LVU52
 256 006c 00F5D840 		add	r0, r0, #27648
 257              		.loc 1 205 33 view .LVU53
 258 0070 0180     		strh	r1, [r0]	@ movhi
 206:cpu/STM32F103/stm32f10x_bkp.c **** }
 259              		.loc 1 206 1 view .LVU54
 260 0072 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE6:
 264              		.align	1
 265              		.p2align 2,,3
 266              		.global	BKP_ReadBackupRegister
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	BKP_ReadBackupRegister:
 272              	.LVL17:
 273              	.LFB7:
 207:cpu/STM32F103/stm32f10x_bkp.c **** 
 208:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 209:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_ReadBackupRegister
 210:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Reads data from the specified Data Backup Register.
 211:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : - BKP_DR: specifies the Data Backup Register.
 212:cpu/STM32F103/stm32f10x_bkp.c **** *                    This parameter can be BKP_DRx where x:[1, 42]
 213:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 214:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : The content of the specified Data Backup Register
 215:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 216:cpu/STM32F103/stm32f10x_bkp.c **** u16 BKP_ReadBackupRegister(u16 BKP_DR)
 217:cpu/STM32F103/stm32f10x_bkp.c **** {
 274              		.loc 1 217 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 218:cpu/STM32F103/stm32f10x_bkp.c ****   /* Check the parameters */
 219:cpu/STM32F103/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 279              		.loc 1 219 3 view .LVU56
 220:cpu/STM32F103/stm32f10x_bkp.c **** 
 221:cpu/STM32F103/stm32f10x_bkp.c ****   return (*(vu16 *) (BKP_BASE + BKP_DR));
 280              		.loc 1 221 3 view .LVU57
 281              		.loc 1 221 31 is_stmt 0 view .LVU58
 282 0074 00F18040 		add	r0, r0, #1073741824
 283              	.LVL18:
 284              		.loc 1 221 31 view .LVU59
 285 0078 00F5D840 		add	r0, r0, #27648
 286              		.loc 1 221 11 view .LVU60
 287 007c 0088     		ldrh	r0, [r0]
 222:cpu/STM32F103/stm32f10x_bkp.c **** }
 288              		.loc 1 222 1 view .LVU61
 289 007e 80B2     		uxth	r0, r0
 290 0080 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE7:
 294              		.align	1
 295 0082 00BF     		.p2align 2,,3
 296              		.global	BKP_GetFlagStatus
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	BKP_GetFlagStatus:
 302              	.LFB8:
 223:cpu/STM32F103/stm32f10x_bkp.c **** 
 224:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 225:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_GetFlagStatus
 226:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Checks whether the Tamper Pin Event flag is set or not.
 227:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : None
 228:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 229:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : The new state of the Tamper Pin Event flag (SET or RESET).
 230:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 231:cpu/STM32F103/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 232:cpu/STM32F103/stm32f10x_bkp.c **** {
 303              		.loc 1 232 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 233:cpu/STM32F103/stm32f10x_bkp.c ****   return (FlagStatus)(*(vu32 *) CSR_TEF_BB);
 308              		.loc 1 233 3 view .LVU63
 309              		.loc 1 233 23 is_stmt 0 view .LVU64
 310 0084 024B     		ldr	r3, .L22
 311 0086 D3F8A006 		ldr	r0, [r3, #1696]
 234:cpu/STM32F103/stm32f10x_bkp.c **** }
 312              		.loc 1 234 1 view .LVU65
 313 008a C0B2     		uxtb	r0, r0
 314 008c 7047     		bx	lr
 315              	.L23:
 316 008e 00BF     		.align	2
 317              	.L22:
 318 0090 00800D42 		.word	1108180992
 319              		.cfi_endproc
 320              	.LFE8:
 322              		.align	1
 323              		.p2align 2,,3
 324              		.global	BKP_ClearFlag
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	BKP_ClearFlag:
 330              	.LFB9:
 235:cpu/STM32F103/stm32f10x_bkp.c **** 
 236:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 237:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_ClearFlag
 238:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Clears Tamper Pin Event pending flag.
 239:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : None
 240:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 241:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 242:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 243:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 244:cpu/STM32F103/stm32f10x_bkp.c **** {
 331              		.loc 1 244 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 245:cpu/STM32F103/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 246:cpu/STM32F103/stm32f10x_bkp.c ****   BKP->CSR |= CSR_CTE_Set;
 336              		.loc 1 246 3 view .LVU67
 337              		.loc 1 246 12 is_stmt 0 view .LVU68
 338 0094 034A     		ldr	r2, .L25
 339 0096 938E     		ldrh	r3, [r2, #52]
 340 0098 9BB2     		uxth	r3, r3
 341 009a 43F00103 		orr	r3, r3, #1
 342 009e 9386     		strh	r3, [r2, #52]	@ movhi
 247:cpu/STM32F103/stm32f10x_bkp.c **** }
 343              		.loc 1 247 1 view .LVU69
 344 00a0 7047     		bx	lr
 345              	.L26:
 346 00a2 00BF     		.align	2
 347              	.L25:
 348 00a4 006C0040 		.word	1073769472
 349              		.cfi_endproc
 350              	.LFE9:
 352              		.align	1
 353              		.p2align 2,,3
 354              		.global	BKP_GetITStatus
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 359              	BKP_GetITStatus:
 360              	.LFB10:
 248:cpu/STM32F103/stm32f10x_bkp.c **** 
 249:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 250:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_GetITStatus
 251:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Checks whether the Tamper Pin Interrupt has occurred or not.
 252:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : None
 253:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 254:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : The new state of the Tamper Pin Interrupt (SET or RESET).
 255:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 256:cpu/STM32F103/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 257:cpu/STM32F103/stm32f10x_bkp.c **** {
 361              		.loc 1 257 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 258:cpu/STM32F103/stm32f10x_bkp.c ****   return (ITStatus)(*(vu32 *) CSR_TIF_BB);
 366              		.loc 1 258 3 view .LVU71
 367              		.loc 1 258 21 is_stmt 0 view .LVU72
 368 00a8 024B     		ldr	r3, .L28
 369 00aa D3F8A406 		ldr	r0, [r3, #1700]
 259:cpu/STM32F103/stm32f10x_bkp.c **** }
 370              		.loc 1 259 1 view .LVU73
 371 00ae C0B2     		uxtb	r0, r0
 372 00b0 7047     		bx	lr
 373              	.L29:
 374 00b2 00BF     		.align	2
 375              	.L28:
 376 00b4 00800D42 		.word	1108180992
 377              		.cfi_endproc
 378              	.LFE10:
 380              		.align	1
 381              		.p2align 2,,3
 382              		.global	BKP_ClearITPendingBit
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	BKP_ClearITPendingBit:
 388              	.LFB11:
 260:cpu/STM32F103/stm32f10x_bkp.c **** 
 261:cpu/STM32F103/stm32f10x_bkp.c **** /*******************************************************************************
 262:cpu/STM32F103/stm32f10x_bkp.c **** * Function Name  : BKP_ClearITPendingBit
 263:cpu/STM32F103/stm32f10x_bkp.c **** * Description    : Clears Tamper Pin Interrupt pending bit.
 264:cpu/STM32F103/stm32f10x_bkp.c **** * Input          : None
 265:cpu/STM32F103/stm32f10x_bkp.c **** * Output         : None
 266:cpu/STM32F103/stm32f10x_bkp.c **** * Return         : None
 267:cpu/STM32F103/stm32f10x_bkp.c **** *******************************************************************************/
 268:cpu/STM32F103/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 269:cpu/STM32F103/stm32f10x_bkp.c **** {
 389              		.loc 1 269 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 270:cpu/STM32F103/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 271:cpu/STM32F103/stm32f10x_bkp.c ****   BKP->CSR |= CSR_CTI_Set;
 394              		.loc 1 271 3 view .LVU75
 395              		.loc 1 271 12 is_stmt 0 view .LVU76
 396 00b8 034A     		ldr	r2, .L31
 397 00ba 938E     		ldrh	r3, [r2, #52]
 398 00bc 9BB2     		uxth	r3, r3
 399 00be 43F00203 		orr	r3, r3, #2
 400 00c2 9386     		strh	r3, [r2, #52]	@ movhi
 272:cpu/STM32F103/stm32f10x_bkp.c **** }
 401              		.loc 1 272 1 view .LVU77
 402 00c4 7047     		bx	lr
 403              	.L32:
 404 00c6 00BF     		.align	2
 405              	.L31:
 406 00c8 006C0040 		.word	1073769472
 407              		.cfi_endproc
 408              	.LFE11:
 410              	.Letext0:
 411              		.file 2 "cpu/STM32F103/stm32f10x_type.h"
 412              		.file 3 "cpu/STM32F103/stm32f10x_map.h"
 413              		.file 4 "cpu/STM32F103/stm32f10x_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_bkp.c
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:17     .text:00000000 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:24     .text:00000000 BKP_DeInit
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:63     .text:00000014 BKP_TamperPinLevelConfig
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:81     .text:0000001c $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:85     .text:00000020 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:92     .text:00000020 BKP_TamperPinCmd
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:110    .text:00000028 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:114    .text:0000002c $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:121    .text:0000002c BKP_ITConfig
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:139    .text:00000034 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:143    .text:00000038 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:150    .text:00000038 BKP_RTCOutputConfig
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:185    .text:0000004c $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:189    .text:00000050 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:196    .text:00000050 BKP_SetRTCCalibrationValue
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:231    .text:00000064 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:235    .text:00000068 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:242    .text:00000068 BKP_WriteBackupRegister
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:271    .text:00000074 BKP_ReadBackupRegister
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:301    .text:00000084 BKP_GetFlagStatus
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:318    .text:00000090 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:322    .text:00000094 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:329    .text:00000094 BKP_ClearFlag
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:348    .text:000000a4 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:352    .text:000000a8 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:359    .text:000000a8 BKP_GetITStatus
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:376    .text:000000b4 $d
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:380    .text:000000b8 $t
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:387    .text:000000b8 BKP_ClearITPendingBit
C:\Users\forre\AppData\Local\Temp\ccoRYEyF.s:406    .text:000000c8 $d

UNDEFINED SYMBOLS
RCC_BackupResetCmd
