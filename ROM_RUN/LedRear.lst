   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"LedRear.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	rear_led_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	rear_led_init:
  25              	.LFB0:
  26              		.file 1 "LedRear.c"
   1:LedRear.c     **** /*
   2:LedRear.c     ****  * LedRear.c
   3:LedRear.c     ****  *
   4:LedRear.c     ****  *  Created on: 26.03.2019
   5:LedRear.c     ****  *      Author: MO
   6:LedRear.c     ****  */
   7:LedRear.c     **** 
   8:LedRear.c     **** #include "LedRear.h"
   9:LedRear.c     **** 
  10:LedRear.c     **** #define HALF_PWM_COUNT	(u8)5
  11:LedRear.c     **** #define MAX_PWM_COUNT	(u8)(HALF_PWM_COUNT<<1)
  12:LedRear.c     **** 
  13:LedRear.c     **** u16 pwmCounterRearLed = 0;
  14:LedRear.c     **** u8 rearLedMode = 0;
  15:LedRear.c     **** u16 msCounterRearLed = 0;
  16:LedRear.c     **** u8 m_rearLedBrightness = 0;
  17:LedRear.c     **** u16 blinkTimeRearLed = 0;
  18:LedRear.c     **** 
  19:LedRear.c     **** void rear_led_init()
  20:LedRear.c     **** {
  27              		.loc 1 20 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  21:LedRear.c     **** 	tmcm_rearLedOff();
  32              		.loc 1 21 2 view .LVU1
  33 0000 FFF7FEBF 		b	tmcm_rearLedOff
  34              	.LVL0:
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.align	1
  39              		.p2align 2,,3
  40              		.global	rear_led_resetCounter
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  45              	rear_led_resetCounter:
  46              	.LFB1:
  22:LedRear.c     **** }
  23:LedRear.c     **** 
  24:LedRear.c     **** void rear_led_resetCounter()
  25:LedRear.c     **** {
  47              		.loc 1 25 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  26:LedRear.c     **** 	pwmCounterRearLed = 0;
  52              		.loc 1 26 2 view .LVU3
  53              		.loc 1 26 20 is_stmt 0 view .LVU4
  54 0004 0022     		movs	r2, #0
  55 0006 024B     		ldr	r3, .L4
  56 0008 1A80     		strh	r2, [r3]	@ movhi
  27:LedRear.c     **** 	msCounterRearLed = 0;
  57              		.loc 1 27 2 is_stmt 1 view .LVU5
  58              		.loc 1 27 19 is_stmt 0 view .LVU6
  59 000a 5A80     		strh	r2, [r3, #2]	@ movhi
  28:LedRear.c     **** }
  60              		.loc 1 28 1 view .LVU7
  61 000c 7047     		bx	lr
  62              	.L5:
  63 000e 00BF     		.align	2
  64              	.L4:
  65 0010 00000000 		.word	.LANCHOR0
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.align	1
  70              		.p2align 2,,3
  71              		.global	rear_led_setMode
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	rear_led_setMode:
  77              	.LVL1:
  78              	.LFB2:
  29:LedRear.c     **** 
  30:LedRear.c     **** void rear_led_setMode(u8 LedModeRear)
  31:LedRear.c     **** {
  79              		.loc 1 31 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  32:LedRear.c     **** 	switch(rearLedMode)
  84              		.loc 1 32 2 view .LVU9
  85 0014 064B     		ldr	r3, .L13
  86 0016 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
  87 0018 032A     		cmp	r2, #3
  88 001a 01D8     		bhi	.L12
  89 001c 1871     		strb	r0, [r3, #4]
  33:LedRear.c     **** 	{
  34:LedRear.c     **** 		case REAR_LED_MODE_OFF:
  35:LedRear.c     **** 		case REAR_LED_MODE_ON:
  36:LedRear.c     **** 		case REAR_LED_MODE_BLINK:
  37:LedRear.c     **** 		case REAR_LED_MODE_BRIGHTNESS:
  38:LedRear.c     **** 			rearLedMode = LedModeRear;
  39:LedRear.c     **** 			break;
  40:LedRear.c     **** 		default:
  41:LedRear.c     **** 			rearLedMode = REAR_LED_MODE_OFF;
  42:LedRear.c     **** 	}
  43:LedRear.c     **** 
  44:LedRear.c     **** 	// reset timer on mode switch, to get clean switch over
  45:LedRear.c     **** 	if (LedModeRear != rearLedMode)
  90              		.loc 1 45 2 view .LVU10
  91              	.L6:
  46:LedRear.c     **** 		rear_led_resetCounter();
  47:LedRear.c     **** }
  92              		.loc 1 47 1 is_stmt 0 view .LVU11
  93 001e 7047     		bx	lr
  94              	.L12:
  41:LedRear.c     **** 	}
  95              		.loc 1 41 4 is_stmt 1 view .LVU12
  96 0020 0022     		movs	r2, #0
  97 0022 1A71     		strb	r2, [r3, #4]
  45:LedRear.c     **** 		rear_led_resetCounter();
  98              		.loc 1 45 2 view .LVU13
  45:LedRear.c     **** 		rear_led_resetCounter();
  99              		.loc 1 45 5 is_stmt 0 view .LVU14
 100 0024 0028     		cmp	r0, #0
 101 0026 FAD0     		beq	.L6
  46:LedRear.c     **** 		rear_led_resetCounter();
 102              		.loc 1 46 3 is_stmt 1 view .LVU15
 103              	.LBB14:
 104              	.LBI14:
  24:LedRear.c     **** {
 105              		.loc 1 24 6 view .LVU16
 106              	.LBB15:
  26:LedRear.c     **** 	msCounterRearLed = 0;
 107              		.loc 1 26 2 view .LVU17
  26:LedRear.c     **** 	msCounterRearLed = 0;
 108              		.loc 1 26 20 is_stmt 0 view .LVU18
 109 0028 1A80     		strh	r2, [r3]	@ movhi
  27:LedRear.c     **** }
 110              		.loc 1 27 2 is_stmt 1 view .LVU19
  27:LedRear.c     **** }
 111              		.loc 1 27 19 is_stmt 0 view .LVU20
 112 002a 5A80     		strh	r2, [r3, #2]	@ movhi
 113              	.LBE15:
 114              	.LBE14:
 115              		.loc 1 47 1 view .LVU21
 116 002c 7047     		bx	lr
 117              	.L14:
 118 002e 00BF     		.align	2
 119              	.L13:
 120 0030 00000000 		.word	.LANCHOR0
 121              		.cfi_endproc
 122              	.LFE2:
 124              		.align	1
 125              		.p2align 2,,3
 126              		.global	rear_led_update
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	rear_led_update:
 132              	.LVL2:
 133              	.LFB3:
  48:LedRear.c     **** 
  49:LedRear.c     **** void rear_led_update(u8 duty, u8 status)
  50:LedRear.c     **** {
 134              		.loc 1 50 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
  51:LedRear.c     **** 	if (duty < status)
 139              		.loc 1 51 2 view .LVU23
 140              		.loc 1 51 5 is_stmt 0 view .LVU24
 141 0034 8842     		cmp	r0, r1
 142 0036 01D2     		bcs	.L16
  52:LedRear.c     **** 	{
  53:LedRear.c     **** 		tmcm_rearLedOff();
 143              		.loc 1 53 3 is_stmt 1 view .LVU25
 144 0038 FFF7FEBF 		b	tmcm_rearLedOff
 145              	.LVL3:
 146              	.L16:
  54:LedRear.c     **** 	}
  55:LedRear.c     **** 	else
  56:LedRear.c     **** 	{
  57:LedRear.c     **** 		tmcm_rearLedOn();
 147              		.loc 1 57 3 view .LVU26
 148 003c FFF7FEBF 		b	tmcm_rearLedOn
 149              	.LVL4:
 150              		.loc 1 57 3 is_stmt 0 view .LVU27
 151              		.cfi_endproc
 152              	.LFE3:
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	rear_led_setBlinkTime
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	rear_led_setBlinkTime:
 162              	.LVL5:
 163              	.LFB4:
  58:LedRear.c     **** 	}
  59:LedRear.c     **** }
  60:LedRear.c     **** 
  61:LedRear.c     **** void rear_led_setBlinkTime(u16 time)
  62:LedRear.c     **** {
 164              		.loc 1 62 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  63:LedRear.c     **** 	blinkTimeRearLed = time;
 169              		.loc 1 63 2 view .LVU29
 170              		.loc 1 63 19 is_stmt 0 view .LVU30
 171 0040 014B     		ldr	r3, .L18
 172 0042 D880     		strh	r0, [r3, #6]	@ movhi
  64:LedRear.c     **** }
 173              		.loc 1 64 1 view .LVU31
 174 0044 7047     		bx	lr
 175              	.L19:
 176 0046 00BF     		.align	2
 177              	.L18:
 178 0048 00000000 		.word	.LANCHOR0
 179              		.cfi_endproc
 180              	.LFE4:
 182              		.align	1
 183              		.p2align 2,,3
 184              		.global	rear_led_brightness
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	rear_led_brightness:
 190              	.LVL6:
 191              	.LFB5:
  65:LedRear.c     **** 
  66:LedRear.c     **** void rear_led_brightness(u8 led_Brightness)
  67:LedRear.c     **** {
 192              		.loc 1 67 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
  68:LedRear.c     **** 	m_rearLedBrightness = led_Brightness;
 197              		.loc 1 68 2 view .LVU33
 198              		.loc 1 68 22 is_stmt 0 view .LVU34
 199 004c 014B     		ldr	r3, .L21
 200 004e 1872     		strb	r0, [r3, #8]
  69:LedRear.c     **** }
 201              		.loc 1 69 1 view .LVU35
 202 0050 7047     		bx	lr
 203              	.L22:
 204 0052 00BF     		.align	2
 205              	.L21:
 206 0054 00000000 		.word	.LANCHOR0
 207              		.cfi_endproc
 208              	.LFE5:
 210              		.align	1
 211              		.p2align 2,,3
 212              		.global	rear_led_off
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	rear_led_off:
 218              	.LFB9:
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0058 FFF7FEBF 		b	tmcm_rearLedOff
 224              		.cfi_endproc
 225              	.LFE9:
 227              		.align	1
 228              		.p2align 2,,3
 229              		.global	rear_led_periodicJob
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	rear_led_periodicJob:
 235              	.LFB7:
  70:LedRear.c     **** 
  71:LedRear.c     **** void rear_led_off()
  72:LedRear.c     **** {
  73:LedRear.c     **** 	tmcm_rearLedOff();
  74:LedRear.c     **** }
  75:LedRear.c     **** 
  76:LedRear.c     **** void rear_led_periodicJob()
  77:LedRear.c     **** {
 236              		.loc 1 77 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
  78:LedRear.c     **** 	switch(rearLedMode)
 240              		.loc 1 78 2 view .LVU37
  77:LedRear.c     **** 	switch(rearLedMode)
 241              		.loc 1 77 1 is_stmt 0 view .LVU38
 242 005c 10B5     		push	{r4, lr}
 243              	.LCFI0:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 247              		.loc 1 78 2 view .LVU39
 248 005e 134C     		ldr	r4, .L38
 249 0060 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 250 0062 032B     		cmp	r3, #3
 251 0064 0AD8     		bhi	.L25
 252 0066 DFE803F0 		tbb	[pc, r3]
 253              	.L27:
 254 006a 07       		.byte	(.L31-.L27)/2
 255 006b 1E       		.byte	(.L32-.L27)/2
 256 006c 02       		.byte	(.L28-.L27)/2
 257 006d 1A       		.byte	(.L26-.L27)/2
 258              		.p2align 1
 259              	.L28:
  79:LedRear.c     **** 	{
  80:LedRear.c     **** 		case REAR_LED_MODE_OFF:
  81:LedRear.c     **** 			rear_led_off();
  82:LedRear.c     **** 			break;
  83:LedRear.c     **** 		case REAR_LED_MODE_ON:
  84:LedRear.c     **** 			rear_led_update(pwmCounterRearLed, 0);
  85:LedRear.c     **** 			break;
  86:LedRear.c     **** 		case REAR_LED_MODE_BLINK:
  87:LedRear.c     **** 			(msCounterRearLed < (blinkTimeRearLed>>1)) ? rear_led_update(pwmCounterRearLed, 0) : rear_led_of
 260              		.loc 1 87 4 is_stmt 1 view .LVU40
 261              		.loc 1 87 22 is_stmt 0 view .LVU41
 262 006e E288     		ldrh	r2, [r4, #6]
 263              		.loc 1 87 87 view .LVU42
 264 0070 6388     		ldrh	r3, [r4, #2]
 265 0072 B3EB520F 		cmp	r3, r2, lsr #1
 266 0076 16D3     		bcc	.L32
 267              	.L31:
 268              	.LBB16:
 269              	.LBI16:
  71:LedRear.c     **** {
 270              		.loc 1 71 6 is_stmt 1 view .LVU43
 271              	.LBB17:
  73:LedRear.c     **** }
 272              		.loc 1 73 2 view .LVU44
 273 0078 FFF7FEFF 		bl	tmcm_rearLedOff
 274              	.LVL7:
 275              	.L25:
 276              	.LBE17:
 277              	.LBE16:
  88:LedRear.c     **** 			break;
  89:LedRear.c     **** 		case REAR_LED_MODE_BRIGHTNESS:
  90:LedRear.c     **** 			rear_led_update(pwmCounterRearLed, m_rearLedBrightness);
  91:LedRear.c     **** 			break;
  92:LedRear.c     **** 	}
  93:LedRear.c     **** 
  94:LedRear.c     **** 	// counter for pwm duty cycle (frequency = 1kHz / MAX_PWM_COUNT)
  95:LedRear.c     **** 	pwmCounterRearLed++;
 278              		.loc 1 95 2 view .LVU45
 279              		.loc 1 95 19 is_stmt 0 view .LVU46
 280 007c 2388     		ldrh	r3, [r4]
  96:LedRear.c     **** 	if (pwmCounterRearLed >= MAX_PWM_COUNT)
  97:LedRear.c     **** 		pwmCounterRearLed = 0;
  98:LedRear.c     **** 
  99:LedRear.c     **** 	// millisecond counter for blinking
 100:LedRear.c     **** 	msCounterRearLed++;
 101:LedRear.c     **** 	if (msCounterRearLed >= blinkTimeRearLed)
 281              		.loc 1 101 5 view .LVU47
 282 007e E288     		ldrh	r2, [r4, #6]
  95:LedRear.c     **** 	if (pwmCounterRearLed >= MAX_PWM_COUNT)
 283              		.loc 1 95 19 view .LVU48
 284 0080 0133     		adds	r3, r3, #1
 285 0082 9BB2     		uxth	r3, r3
  96:LedRear.c     **** 	if (pwmCounterRearLed >= MAX_PWM_COUNT)
 286              		.loc 1 96 2 is_stmt 1 view .LVU49
  96:LedRear.c     **** 	if (pwmCounterRearLed >= MAX_PWM_COUNT)
 287              		.loc 1 96 5 is_stmt 0 view .LVU50
 288 0084 092B     		cmp	r3, #9
  97:LedRear.c     **** 
 289              		.loc 1 97 3 is_stmt 1 view .LVU51
  97:LedRear.c     **** 
 290              		.loc 1 97 21 is_stmt 0 view .LVU52
 291 0086 88BF     		it	hi
 292 0088 0023     		movhi	r3, #0
 293 008a 2380     		strh	r3, [r4]	@ movhi
 100:LedRear.c     **** 	if (msCounterRearLed >= blinkTimeRearLed)
 294              		.loc 1 100 2 is_stmt 1 view .LVU53
 100:LedRear.c     **** 	if (msCounterRearLed >= blinkTimeRearLed)
 295              		.loc 1 100 18 is_stmt 0 view .LVU54
 296 008c 6388     		ldrh	r3, [r4, #2]
 297 008e 0133     		adds	r3, r3, #1
 298 0090 9BB2     		uxth	r3, r3
 299              		.loc 1 101 5 view .LVU55
 300 0092 9A42     		cmp	r2, r3
 100:LedRear.c     **** 	if (msCounterRearLed >= blinkTimeRearLed)
 301              		.loc 1 100 18 view .LVU56
 302 0094 6380     		strh	r3, [r4, #2]	@ movhi
 303              		.loc 1 101 2 is_stmt 1 view .LVU57
 102:LedRear.c     **** 		msCounterRearLed = 0;
 304              		.loc 1 102 3 view .LVU58
 305              		.loc 1 102 20 is_stmt 0 view .LVU59
 306 0096 9CBF     		itt	ls
 307 0098 0023     		movls	r3, #0
 308 009a 6380     		strhls	r3, [r4, #2]	@ movhi
 103:LedRear.c     **** }
 309              		.loc 1 103 1 view .LVU60
 310 009c 10BD     		pop	{r4, pc}
 311              	.L26:
  90:LedRear.c     **** 			break;
 312              		.loc 1 90 4 is_stmt 1 view .LVU61
 313              	.LVL8:
 314              	.LBB18:
 315              	.LBI18:
  49:LedRear.c     **** {
 316              		.loc 1 49 6 view .LVU62
 317              	.LBB19:
  51:LedRear.c     **** 	{
 318              		.loc 1 51 2 view .LVU63
  51:LedRear.c     **** 	{
 319              		.loc 1 51 5 is_stmt 0 view .LVU64
 320 009e 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 321 00a0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 322 00a2 9A42     		cmp	r2, r3
 323 00a4 E8D8     		bhi	.L31
 324              	.LVL9:
 325              	.L32:
  51:LedRear.c     **** 	{
 326              		.loc 1 51 5 view .LVU65
 327              	.LBE19:
 328              	.LBE18:
 329              	.LBB20:
 330              	.LBI20:
  49:LedRear.c     **** {
 331              		.loc 1 49 6 is_stmt 1 discriminator 1 view .LVU66
 332              	.LBB21:
  51:LedRear.c     **** 	{
 333              		.loc 1 51 2 discriminator 1 view .LVU67
  57:LedRear.c     **** 	}
 334              		.loc 1 57 3 discriminator 1 view .LVU68
 335 00a6 FFF7FEFF 		bl	tmcm_rearLedOn
 336              	.LVL10:
  57:LedRear.c     **** 	}
 337              		.loc 1 57 3 is_stmt 0 discriminator 1 view .LVU69
 338 00aa E7E7     		b	.L25
 339              	.L39:
 340              		.align	2
 341              	.L38:
 342 00ac 00000000 		.word	.LANCHOR0
 343              	.LBE21:
 344              	.LBE20:
 345              		.cfi_endproc
 346              	.LFE7:
 348              		.global	blinkTimeRearLed
 349              		.global	m_rearLedBrightness
 350              		.global	msCounterRearLed
 351              		.global	rearLedMode
 352              		.global	pwmCounterRearLed
 353              		.bss
 354              		.align	1
 355              		.set	.LANCHOR0,. + 0
 358              	pwmCounterRearLed:
 359 0000 0000     		.space	2
 362              	msCounterRearLed:
 363 0002 0000     		.space	2
 366              	rearLedMode:
 367 0004 00       		.space	1
 368 0005 00       		.space	1
 371              	blinkTimeRearLed:
 372 0006 0000     		.space	2
 375              	m_rearLedBrightness:
 376 0008 00       		.space	1
 377              		.text
 378              	.Letext0:
 379              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 380              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 381              		.file 4 "TMC-API/tmc/helpers/Types.h"
 382              		.file 5 "Definitions.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LedRear.c
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:17     .text:00000000 $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:24     .text:00000000 rear_led_init
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:45     .text:00000004 rear_led_resetCounter
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:65     .text:00000010 $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:69     .text:00000014 $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:76     .text:00000014 rear_led_setMode
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:120    .text:00000030 $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:124    .text:00000034 $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:131    .text:00000034 rear_led_update
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:161    .text:00000040 rear_led_setBlinkTime
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:178    .text:00000048 $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:182    .text:0000004c $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:189    .text:0000004c rear_led_brightness
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:206    .text:00000054 $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:210    .text:00000058 $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:217    .text:00000058 rear_led_off
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:234    .text:0000005c rear_led_periodicJob
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:254    .text:0000006a $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:258    .text:0000006e $t
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:342    .text:000000ac $d
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:371    .bss:00000006 blinkTimeRearLed
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:375    .bss:00000008 m_rearLedBrightness
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:362    .bss:00000002 msCounterRearLed
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:366    .bss:00000004 rearLedMode
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:358    .bss:00000000 pwmCounterRearLed
C:\Users\forre\AppData\Local\Temp\ccFoyaX3.s:354    .bss:00000000 $d

UNDEFINED SYMBOLS
tmcm_rearLedOff
tmcm_rearLedOn
